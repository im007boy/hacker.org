// Decompiled by Jad v1.5.8e. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.geocities.com/kpdus/jad.html
// Decompiler options: packimports(3) 
// Source File Name:   BonusActor.java

import java.awt.Image;
import java.awt.Rectangle;
import java.awt.image.ImageObserver;
import java.util.Hashtable;

public class BonusActor extends ImageMovingActor
{

    public BonusActor(Bonus bonus, BreakoutGame breakoutgame, Stage stage, Image image, ImageObserver imageobserver, int i, int j)
    {
        super(stage, image, imageobserver, i, j);
        lIlI = bonus;
        setDx(DefaultStage.AnimationThread.IIl1);
        if(breakoutgame.firstPaddleTop())
        {
            j = BreakoutGame.TripleBonus.I1II;
            break MISSING_BLOCK_LABEL_45;
        }
        j = BreakoutGame.DestroyerBonus.$$5;
        setDy(j);
        this;
        if((byte)0x438e0cee % Paddle.S5S == 0) goto _L2; else goto _L1
_L1:
        JVM INSTR pop ;
        break MISSING_BLOCK_LABEL_75;
_L3:
        throw ;
_L2:
        breakoutgame;
        Il1l;
        return;
        null;
          goto _L3
    }

    public int collisionVector()
    {
        return BreakoutGame.S$55;
    }

    public void hit(Actor actor)
    {
        actor instanceof Paddle;
        ImmortalBlock.SS$SS$;
        JVM INSTR ifge 15;
           goto _L1 _L2
_L1:
        JVM INSTR pop ;
        break MISSING_BLOCK_LABEL_37;
_L5:
        throw ;
_L2:
        JVM INSTR ifeq 34;
           goto _L3 _L4
_L3:
        break MISSING_BLOCK_LABEL_18;
_L4:
        break MISSING_BLOCK_LABEL_29;
        Il1l.setBonus(lIlI);
        die();
        return;
        null;
          goto _L5
    }

    public int zOrder()
    {
        return BreakoutGame.S$55;
    }

    public void setBonus(Bonus bonus)
    {
        lIlI = bonus;
    }

    public Bonus getBonus()
    {
        return lIlI;
    }

    public static Object hit(Object obj, Hashtable hashtable)
    {
        return hashtable.get(obj);
    }

    public static boolean hit(Object obj, Rectangle rectangle)
    {
        return rectangle.equals(obj);
    }

    public static StringBuffer getBonus(Object obj, StringBuffer stringbuffer)
    {
        return stringbuffer.append(obj);
    }

    public static void collisionVector(long l)
    {
        Thread.sleep(l);
    }

    public static final float S$55$ = 1.069548E+09F;
    private BreakoutGame Il1l;
    private Bonus lIlI;
    public static String S$55S$ = " last: ";
    public static int lll;
    public static int S5S$ = 127;
    public static boolean S$5S$ = true;
    public static Boolean $55S = new Boolean(false);

}
