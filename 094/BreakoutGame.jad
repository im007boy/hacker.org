// Decompiled by Jad v1.5.8e. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.geocities.com/kpdus/jad.html
// Decompiler options: packimports(3) 
// Source File Name:   BreakoutGame.java

import java.awt.*;
import java.awt.image.ImageObserver;
import java.util.*;

public class BreakoutGame
{
    class BallSplitterBonus extends NullBonus
    {

        public void addBonus()
        {
            int i = BonusActor.lll;
              goto _L1
_L4:
            ((Paddle)BreakoutGame.topBounce(i, llll.S555)).setSplitBall(Block.llI);
            i++;
            if((byte)0x255e44ee % Paddle.S5S == 0) goto _L1; else goto _L2
_L2:
            null;
            throw ;
_L1:
            if(i >= DefaultStage.access$4(llll.S555))
                return;
            if(true) goto _L4; else goto _L3
_L3:
        }

        public void removeBonus()
        {
            int i = BonusActor.lll;
              goto _L1
_L3:
            Object obj;
            obj = BreakoutGame.topBounce(i, llll.S555);
            if((byte)0x7dfc8f7e % 9 == 0)
                break MISSING_BLOCK_LABEL_30;
            null;
            throw ;
            ((Paddle)obj).setSplitBall(BonusActor.lll);
            i++;
_L1:
            if(i < DefaultStage.access$4(llll.S555)) goto _L3; else goto _L2
_L2:
        }

        public String toString()
        {
            return FixedActor.l1lI1;
        }

        final BreakoutGame llll; /* synthetic field */
        public static int S5SS = 200;
        public static boolean lllIl = true;
        public static Boolean III11 = new Boolean(false);


        BallSplitterBonus()
        {
        }
    }

    class DestroyerBonus extends NullBonus
    {

        public void addBonus()
        {
            int i = BonusActor.lll;
              goto _L1
_L5:
            llll;
            if((byte)0x48067aee % Paddle.S5S == 0) goto _L3; else goto _L2
_L2:
            JVM INSTR pop ;
            break MISSING_BLOCK_LABEL_65;
_L6:
            throw ;
_L3:
            $S5$;
            Vector vector;
            vector;
            ((Ball)BreakoutGame.topBounce(i, vector)).setDestroyer(Block.llI);
            i++;
_L1:
            if(i < DefaultStage.access$4(llll.$S5$)) goto _L5; else goto _L4
_L4:
            return;
            null;
              goto _L6
        }

        public void removeBonus()
        {
            int i = BonusActor.lll;
              goto _L1
_L5:
            (Ball)BreakoutGame.topBounce(i, llll.$S5$);
            if((byte)0x43b6852d % Paddle.S5S == 0) goto _L3; else goto _L2
_L2:
            JVM INSTR pop ;
            break MISSING_BLOCK_LABEL_63;
_L6:
            throw ;
_L3:
            BonusActor.lll;
            setDestroyer();
            i++;
_L1:
            if(i < DefaultStage.access$4(llll.$S5$)) goto _L5; else goto _L4
_L4:
            return;
            null;
              goto _L6
        }

        public String toString()
        {
            return DefaultStage.ClockThread.SSS;
        }

        final BreakoutGame llll; /* synthetic field */
        public static float $$5 = 1.5F;
        public static int IlII = 1000;
        public static int IlI = 5;
        public static int $5SS5 = 26;
        public static boolean II1Il = true;
        public static Boolean SS$$ = new Boolean(false);


        DestroyerBonus()
        {
        }
    }

    class DoubleBallBonus extends NullBonus
    {

        public void addBonus()
        {
            llll.IllI = Block.llI;
            DefaultStage.access$4(llll.$S5$);
            if((byte)0x1d03c009 % 9 == 0) goto _L2; else goto _L1
_L1:
            JVM INSTR pop ;
            break MISSING_BLOCK_LABEL_65;
_L5:
            throw ;
_L2:
            Block.llI;
            JVM INSTR icmpne 62;
               goto _L3 _L4
_L3:
            break MISSING_BLOCK_LABEL_40;
_L4:
            break MISSING_BLOCK_LABEL_61;
            this = llll.$S5$;
            ((Ball)BreakoutGame.topBounce(BonusActor.lll, this)).forceSplit();
            return;
            null;
              goto _L5
        }

        public void removeBonus()
        {
            llll.IllI = BonusActor.lll;
        }

        public String toString()
        {
            return KillingFloor.$5$S;
        }

        final BreakoutGame llll; /* synthetic field */
        public static String IlIl = "None                    ";
        public static int IIll = 35;
        public static int $55$ = 32;
        public static int I1l1 = 1007;
        public static Boolean I1Il = new Boolean(true);
        public static boolean $5SS;


        DoubleBallBonus()
        {
        }
    }

    class GunBonus extends NullBonus
    {

        public void addBonus()
        {
            int i = BonusActor.lll;
              goto _L1
_L5:
            ((Paddle)BreakoutGame.topBounce(i, llll.S555)).setGun(Block.llI);
            i++;
_L1:
            Vector vector = llll.S555;
            Border.S$$$$.booleanValue();
            JVM INSTR ifge 49;
               goto _L2 _L3
_L2:
            break MISSING_BLOCK_LABEL_47;
_L3:
            continue; /* Loop/switch isn't completed */
            null;
            throw ;
            if(i < DefaultStage.access$4(vector)) goto _L5; else goto _L4
_L4:
        }

        public void removeBonus()
        {
            int i = BonusActor.lll;
              goto _L1
_L5:
            llll.S555;
            LongBonus..S5S.booleanValue();
            JVM INSTR ifge 28;
               goto _L2 _L3
_L2:
            JVM INSTR pop ;
            break MISSING_BLOCK_LABEL_64;
_L6:
            throw ;
_L3:
            Vector vector;
            vector;
            ((Paddle)BreakoutGame.topBounce(i, vector)).setGun(BonusActor.lll);
            i++;
_L1:
            if(i < DefaultStage.access$4(llll.S555)) goto _L5; else goto _L4
_L4:
            return;
            null;
              goto _L6
        }

        public String toString()
        {
            return $5$;
        }

        final BreakoutGame llll; /* synthetic field */
        public static float S$5 = -3F;
        public static String $5$ = "Gun";
        public static boolean ll1I = true;
        public static Boolean llII = new Boolean(false);


        GunBonus()
        {
        }
    }

    class LifeBonus extends NullBonus
    {

        public void addBonus()
        {
            long l = Ball.S$$;
            BreakoutGame breakoutgame = llll;
            JVM INSTR monitorenter ;
            llll.I1ll += Block.llI;
            break MISSING_BLOCK_LABEL_36;
            this;
            breakoutgame;
            JVM INSTR monitorexit ;
            throw this;
            llll.S5$5$.setLivesLeft((int)(((long)llll.I1ll & 0xffffffffL ^ l & 0xffffffff00000000L) & 0xffffffffL));
            return;
        }

        public String toString()
        {
            return BreakoutGame.I11Il;
        }

        public boolean equivalent(Bonus bonus)
        {
            return BonusActor.lll;
        }

        final BreakoutGame llll; /* synthetic field */
        public static float lII = 5.2F;
        public static String IlI1 = "block";
        public static int $$$S = 97;
        public static int S55$ = 7;
        public static boolean Illl1 = true;
        public static Boolean $5$$ = new Boolean(false);


        LifeBonus()
        {
        }
    }

    class LongBonus extends NullBonus
    {

        public void addBonus()
        {
            int i = BonusActor.lll;
              goto _L1
_L5:
            (Paddle)BreakoutGame.topBounce(i, llll.S555);
            if((byte)0xd844d63 % 9 == 0) goto _L3; else goto _L2
_L2:
            JVM INSTR pop ;
            break MISSING_BLOCK_LABEL_62;
_L6:
            throw ;
_L3:
            Block.llI;
            setBigPaddle();
            i++;
_L1:
            if(i < DefaultStage.access$4(llll.S555)) goto _L5; else goto _L4
_L4:
            return;
            null;
              goto _L6
        }

        public void removeBonus()
        {
            int i = BonusActor.lll;
              goto _L1
_L3:
            ((Paddle)BreakoutGame.topBounce(i, llll.S555)).setBigPaddle(BonusActor.lll);
            i++;
_L1:
            if(i < DefaultStage.access$4(llll.S555)) goto _L3; else goto _L2
_L2:
            DefaultStage.ClockThread.l1Ill1;
            JVM INSTR ifge 52;
               goto _L4 _L5
_L4:
            break MISSING_BLOCK_LABEL_50;
_L5:
            break MISSING_BLOCK_LABEL_52;
            null;
            throw ;
        }

        public String toString()
        {
            return StraightLineMovementCalculator.I1I;
        }

        final BreakoutGame llll; /* synthetic field */
        public static int $SSS = 80;
        public static boolean $5S$5 = true;
        public static Boolean $S5S = new Boolean(false);


        LongBonus()
        {
        }
    }

    class NullBonus
        implements Bonus
    {

        public boolean equivalent(Bonus bonus)
        {
            this = Border.hit(this);
            return ActorArray.sort(Border.hit(bonus), this);
        }

        public void addBonus()
        {
        }

        public void removeBonus()
        {
        }

        public String toString()
        {
            return DoubleBallBonus.IlIl;
        }

        final BreakoutGame llll; /* synthetic field */
        public static String SS$ = "wall";
        public static int l1IIl = 10;
        public static int $5S5S = 12;
        public static int I111 = 100;
        public static int IIlI = 350;
        public static int lIll = 40;
        public static int llI1l = 23;
        public static boolean llllI = true;
        public static Boolean S55$$ = new Boolean(false);


        NullBonus()
        {
        }
    }

    class Restart extends Thread
    {

        public void run()
        {
            llll.stop();
            llll.start();
        }

        final BreakoutGame llll; /* synthetic field */
        public static Boolean $$$$$5 = new Boolean(true);
        public static boolean llll1;


        Restart()
        {
        }
    }

    class SlowBallBonus extends NullBonus
    {

        public void addBonus()
        {
            Ball.resetBallSpeed();
        }

        public String toString()
        {
            return LevelConstructor.I1I11;
        }

        public boolean equivalent(Bonus bonus)
        {
            return BonusActor.lll;
        }

        final BreakoutGame llll; /* synthetic field */
        public static float $$5S = -1F;
        public static Boolean S5555S = new Boolean(true);
        public static boolean $$$$5;


        SlowBallBonus()
        {
        }
    }

    class StickyBonus extends NullBonus
    {

        public void addBonus()
        {
            int i = BonusActor.lll;
              goto _L1
_L5:
            ((Paddle)BreakoutGame.topBounce(i, llll.S555)).setSticky(Block.llI);
            i++;
_L1:
            i;
            DefaultStage.access$4(llll.S555);
            KillingFloor.lIll1.booleanValue();
            JVM INSTR ifge 56;
               goto _L2 _L3
_L2:
            JVM INSTR pop ;
            JVM INSTR pop ;
            break MISSING_BLOCK_LABEL_63;
_L6:
            throw ;
_L3:
            JVM INSTR icmplt 60;
               goto _L4 _L5
_L4:
            return;
            null;
              goto _L6
        }

        public void removeBonus()
        {
            int i = BonusActor.lll;
              goto _L1
_L6:
            i;
            llll.S555;
            if((byte)0x52e02124 % Paddle.S5S == 0) goto _L3; else goto _L2
_L2:
            JVM INSTR pop ;
              goto _L4
_L7:
            throw ;
_L3:
            BreakoutGame.topBounce();
            (Paddle);
            BonusActor.lll;
            setSticky();
            i++;
_L1:
            if(i < DefaultStage.access$4(llll.S555)) goto _L6; else goto _L5
_L5:
            return;
_L4:
            JVM INSTR pop ;
            null;
              goto _L7
        }

        public String toString()
        {
            return LevelConstructor.$555;
        }

        final BreakoutGame llll; /* synthetic field */
        public static float Ill = 0.5F;
        public static String I1I1l = "Blocks Left:";
        public static Boolean S5S$5 = new Boolean(true);
        public static boolean $$55;


        StickyBonus()
        {
        }
    }

    class TripleBonus extends NullBonus
    {

        public void addBonus()
        {
            Ball ball;
            long l;
            long l1 = Ball.S$$;
            l = Ball.S$$;
            l = Ball.S$$;
            l = Ball.S$$;
            l = Ball.S$$;
            l = Ball.S$$;
            l = Ball.S$$;
            l = Ball.S$$;
            l = Ball.S$$;
            l = Ball.S$$;
            l = Ball.S$$;
            l = Ball.S$$;
            l = Ball.S$$;
            l = Ball.S$$;
            l = Ball.S$$;
            l = Ball.S$$;
            ball = null;
            if((int)(((long)DefaultStage.access$4(llll.$S5$) & 0xffffffffL ^ l1 & 0xffffffff00000000L) & 0xffffffffL) != 0)
            {
                Vector vector = llll.$S5$;
                ball = (Ball)BreakoutGame.topBounce(BonusActor.lll, vector);
            }
            int i = BonusActor.lll;
              goto _L1
_L5:
            Ball ball1;
            ball1 = (Ball)BreakoutGame.topBounce(i, llll.$S5$);
            l = (long)(ball1.getDy() != DefaultStage.AnimationThread.IIl1) & 255L ^ l & -256L;
            if((byte)(int)(l & 255L) != 0)
                l = (long)Block.llI << 19 & 0x80000L ^ l & 0xfffffffffff7ffffL;
            else
                l = (long)BonusActor.lll << 19 & 0x80000L ^ l & 0xfffffffffff7ffffL;
            ball1.getDx();
            DestroyerMovementCalculator.II11ll.booleanValue();
            JVM INSTR ifge 247;
               goto _L2 _L3
_L2:
            JVM INSTR pop ;
            break MISSING_BLOCK_LABEL_427;
_L6:
            throw ;
_L3:
            DefaultStage.AnimationThread.IIl1;
            JVM INSTR fcmpl ;
            (long);
            9;
            JVM INSTR lshl ;
            0x1fe00L;
            JVM INSTR land ;
            l & 0xfffffffffffe01ffL;
            JVM INSTR lxor ;
            l;
            if((byte)(int)((l & 0x1fe00L) >> 9) != 0)
                l = (long)Block.llI << DestroyerBonus.._fld5SS5 & 0x4000000L ^ l & 0xfffffffffbffffffL;
            else
                l = (long)BonusActor.lll << DestroyerBonus.._fld5SS5 & 0x4000000L ^ l & 0xfffffffffbffffffL;
            l = (long)((int)((l & 0x80000L) >> 19) | (int)((l & 0x4000000L) >> DestroyerBonus.._fld5SS5)) << BouncingMovementCalculator.$5S & 0x400000L ^ l & 0xffffffffffbfffffL;
            if((int)((l & 0x400000L) >> BouncingMovementCalculator.$5S) != 0)
                ball = ball1;
            i++;
_L1:
            if(i < DefaultStage.access$4(llll.$S5$)) goto _L5; else goto _L4
_L4:
            if(ball != null)
                ball.triple();
            return;
            null;
              goto _L6
        }

        public boolean equivalent(Bonus bonus)
        {
            return BonusActor.lll;
        }

        public String toString()
        {
            return FixedActor.$SS5;
        }

        final BreakoutGame llll; /* synthetic field */
        public static float I1II = -1.5F;
        public static int l1l1 = 4;
        public static Boolean lIIII = new Boolean(true);
        public static boolean lI1l;


        TripleBonus()
        {
        }
    }


    public static void main(String args[])
    {
        long l;
        l = Ball.S$$;
        args = BonusActor.lll;
          goto _L1
_L4:
        java.io.PrintStream printstream = System.out;
        StringBuffer stringbuffer = JVM INSTR new #69  <Class StringBuffer>;
        stringbuffer.StringBuffer(FixedActor.getBounds(args));
        stringbuffer = ActorArray.ActorIterator.next(DestroyerMovementCalculator.Il1, stringbuffer);
        ActorArray.ActorIterator.hasNext(Border.collisionVector(ActorArray.ActorIterator.next(encodeLevel(args), stringbuffer)), printstream);
        args++;
        FixedActor.ll1Il.booleanValue();
        JVM INSTR ifge 64;
           goto _L2 _L1
_L2:
        null;
        throw ;
_L1:
        if(args < MovingResults.I1I1) goto _L4; else goto _L3
_L3:
        for(l = (long)BonusActor.lll & 0xffffffffL ^ ((long)Block.llI << DoubleBallBonus.IIll & 0x800000000L ^ l & 0xfffffff7ffffffffL) & 0xffffffff00000000L; (int)(l & 0xffffffffL) > BonusActor.S5S$; l = (long)(Block.llI + (int)(l & 0xffffffffL)) ^ l & 0xffffffff00000000L)
            if((int)(l & 0xffffffffL) != decodeLevel(encodeLevel((int)(l & 0xffffffffL))))
                l = (long)BonusActor.lll << DoubleBallBonus.IIll & 0x800000000L ^ l & 0xfffffff7ffffffffL;

        java.io.PrintStream printstream1 = System.out;
        StringBuffer stringbuffer1 = JVM INSTR new #69  <Class StringBuffer>;
        stringbuffer1.StringBuffer(DestroyerMovementCalculator._____);
        if((int)((l & 0x800000000L) >> DoubleBallBonus.IIll) != 0)
            args = DefaultStage.AnimationThread.II1;
        else
            args = ImageMovingActor.llII1;
        ActorArray.ActorIterator.hasNext(Border.collisionVector(ActorArray.ActorIterator.next(args, stringbuffer1)), printstream1);
        return;
    }

    public static String encodeLevel(int i)
    {
        long l;
        long l1;
        long l2;
        long l3;
        long l4;
        long l5;
        long l6;
        long l7;
        long l8;
        long l9;
        long l10;
        long l11;
        long l12;
        long l13;
        long l14;
        long l15;
        long l16;
        long l17;
        long l18;
        long l19;
        long l20;
        long l21;
        long l22;
        long l23;
        long l24;
        long l25;
        long l26;
        long l27;
        long l28;
        long l29;
        long l30;
        long l31;
        long l32;
        long l33;
        long l34;
        long l35;
        long l36;
        long l37;
        long l38;
        long l39;
        long l40;
        l40 = Ball.S$$;
        l39 = Ball.S$$;
        l39 = Ball.S$$;
        l39 = Ball.S$$;
        l39 = Ball.S$$;
        l39 = Ball.S$$;
        l39 = Ball.S$$;
        l39 = Ball.S$$;
        l39 = Ball.S$$;
        l39 = Ball.S$$;
        l39 = Ball.S$$;
        l39 = Ball.S$$;
        l39 = Ball.S$$;
        l39 = Ball.S$$;
        l39 = Ball.S$$;
        l39 = Ball.S$$;
        l38 = Ball.S$$;
        l38 = Ball.S$$;
        l37 = Ball.S$$;
        l37 = Ball.S$$;
        l37 = Ball.S$$;
        l37 = Ball.S$$;
        l37 = Ball.S$$;
        l37 = Ball.S$$;
        l37 = Ball.S$$;
        l37 = Ball.S$$;
        l37 = Ball.S$$;
        l36 = Ball.S$$;
        l36 = Ball.S$$;
        l36 = Ball.S$$;
        l36 = Ball.S$$;
        l35 = Ball.S$$;
        l35 = Ball.S$$;
        l35 = Ball.S$$;
        l34 = Ball.S$$;
        l34 = Ball.S$$;
        l34 = Ball.S$$;
        l34 = Ball.S$$;
        l34 = Ball.S$$;
        l34 = Ball.S$$;
        l34 = Ball.S$$;
        l34 = Ball.S$$;
        l33 = Ball.S$$;
        l33 = Ball.S$$;
        l33 = Ball.S$$;
        l33 = Ball.S$$;
        l32 = Ball.S$$;
        l32 = Ball.S$$;
        l32 = Ball.S$$;
        l32 = Ball.S$$;
        l32 = Ball.S$$;
        l32 = Ball.S$$;
        l32 = Ball.S$$;
        l31 = Ball.S$$;
        l30 = Ball.S$$;
        l30 = Ball.S$$;
        l30 = Ball.S$$;
        l30 = Ball.S$$;
        l30 = Ball.S$$;
        l30 = Ball.S$$;
        l30 = Ball.S$$;
        l30 = Ball.S$$;
        l29 = Ball.S$$;
        l29 = Ball.S$$;
        l29 = Ball.S$$;
        l29 = Ball.S$$;
        l29 = Ball.S$$;
        l29 = Ball.S$$;
        l29 = Ball.S$$;
        l29 = Ball.S$$;
        l29 = Ball.S$$;
        l29 = Ball.S$$;
        l28 = Ball.S$$;
        l28 = Ball.S$$;
        l28 = Ball.S$$;
        l27 = Ball.S$$;
        l27 = Ball.S$$;
        l26 = Ball.S$$;
        l26 = Ball.S$$;
        l26 = Ball.S$$;
        l26 = Ball.S$$;
        l26 = Ball.S$$;
        l26 = Ball.S$$;
        l26 = Ball.S$$;
        l26 = Ball.S$$;
        l26 = Ball.S$$;
        l25 = Ball.S$$;
        l25 = Ball.S$$;
        l24 = Ball.S$$;
        l24 = Ball.S$$;
        l24 = Ball.S$$;
        l24 = Ball.S$$;
        l24 = Ball.S$$;
        l23 = Ball.S$$;
        l22 = Ball.S$$;
        l21 = Ball.S$$;
        l20 = Ball.S$$;
        l20 = Ball.S$$;
        l20 = Ball.S$$;
        l20 = Ball.S$$;
        l19 = Ball.S$$;
        l18 = Ball.S$$;
        l18 = Ball.S$$;
        l18 = Ball.S$$;
        l18 = Ball.S$$;
        l18 = Ball.S$$;
        l18 = Ball.S$$;
        l18 = Ball.S$$;
        l18 = Ball.S$$;
        l18 = Ball.S$$;
        l18 = Ball.S$$;
        l17 = Ball.S$$;
        l16 = Ball.S$$;
        l16 = Ball.S$$;
        l16 = Ball.S$$;
        l16 = Ball.S$$;
        l16 = Ball.S$$;
        l16 = Ball.S$$;
        l16 = Ball.S$$;
        l15 = Ball.S$$;
        l15 = Ball.S$$;
        l15 = Ball.S$$;
        l15 = Ball.S$$;
        l15 = Ball.S$$;
        l15 = Ball.S$$;
        l15 = Ball.S$$;
        l15 = Ball.S$$;
        l15 = Ball.S$$;
        l14 = Ball.S$$;
        l14 = Ball.S$$;
        l14 = Ball.S$$;
        l14 = Ball.S$$;
        l14 = Ball.S$$;
        l14 = Ball.S$$;
        l14 = Ball.S$$;
        l14 = Ball.S$$;
        l14 = Ball.S$$;
        l13 = Ball.S$$;
        l13 = Ball.S$$;
        l13 = Ball.S$$;
        l13 = Ball.S$$;
        l13 = Ball.S$$;
        l13 = Ball.S$$;
        l13 = Ball.S$$;
        l12 = Ball.S$$;
        l12 = Ball.S$$;
        l12 = Ball.S$$;
        l11 = Ball.S$$;
        l11 = Ball.S$$;
        l11 = Ball.S$$;
        l11 = Ball.S$$;
        l11 = Ball.S$$;
        l11 = Ball.S$$;
        l11 = Ball.S$$;
        l11 = Ball.S$$;
        l11 = Ball.S$$;
        l11 = Ball.S$$;
        l11 = Ball.S$$;
        l11 = Ball.S$$;
        l11 = Ball.S$$;
        l11 = Ball.S$$;
        l10 = Ball.S$$;
        l10 = Ball.S$$;
        l10 = Ball.S$$;
        l10 = Ball.S$$;
        l10 = Ball.S$$;
        l10 = Ball.S$$;
        l9 = Ball.S$$;
        l9 = Ball.S$$;
        l8 = Ball.S$$;
        l7 = Ball.S$$;
        l6 = Ball.S$$;
        l5 = Ball.S$$;
        l5 = Ball.S$$;
        l5 = Ball.S$$;
        l5 = Ball.S$$;
        l4 = Ball.S$$;
        l3 = Ball.S$$;
        l3 = Ball.S$$;
        l3 = Ball.S$$;
        l2 = Ball.S$$;
        l1 = Ball.S$$;
        l = Ball.S$$;
        l = Ball.S$$;
        l = Ball.S$$;
        if(i >= 0 && i <= BonusActor.S5S$)
            break MISSING_BLOCK_LABEL_935;
        return null;
        l22 = (long)(int)(MovingResults.toString(lll1I) * Border.____) & 0xffffffffL ^ l22 & 0xffffffff00000000L;
        l = (long)(int)(MovingResults.toString(lll1I) * Border.____) & 0xffffffffL ^ l & 0xffffffff00000000L;
        l16 = (long)(int)(MovingResults.toString(lll1I) * Border.____) << DoubleBallBonus.._cls55. & 0xffffffff00000000L ^ l16 & 0xffffffffL;
        l31 = (long)(int)(MovingResults.toString(lll1I) * Border.____) & 0xffffffffL ^ l31 & 0xffffffff00000000L;
        l40 = (long)(int)(MovingResults.toString(lll1I) * Border.____) & 0xffffffffL ^ l40 & 0xffffffff00000000L;
        l10 = (long)(int)(MovingResults.toString(lll1I) * Border.____) & 0xffffffffL ^ l10 & 0xffffffff00000000L;
        l21 = (long)((int)(l22 & 0xffffffffL) % S$55) << DoubleBallBonus.._cls55. & 0xffffffff00000000L ^ l21 & 0xffffffffL;
        l29 = (long)((int)((l21 & 0xffffffff00000000L) >> DoubleBallBonus.._cls55.) * Block.llI) & 0xffffffffL ^ l29 & 0xffffffff00000000L;
        if((int)(l29 & 0xffffffffL) != (int)(((long)(i & Block.llI) & 0xffffffffL ^ l9 & 0xffffffff00000000L) & 0xffffffffL))
            l22 = (long)((int)(((long)((int)(l22 & 0xffffffffL) + Block.llI) & 0xffffffffL ^ l39 & 0xffffffff00000000L) & 0xffffffffL) % DestroyerBonus.._fld5SS5) & 0xffffffffL ^ l22 & 0xffffffff00000000L;
        l10 = (long)((int)(l & 0xffffffffL) % S$55) << DoubleBallBonus.._cls55. & 0xffffffff00000000L ^ l10 & 0xffffffffL;
        l5 = (long)((int)((l10 & 0xffffffff00000000L) >> DoubleBallBonus.._cls55.) << 321) & 0xffffffffL ^ l5 & 0xffffffff00000000L;
        if((int)(l5 & 0xffffffffL) != (int)(((long)(i & S$55) & 0xffffffffL ^ l36 & 0xffffffff00000000L) & 0xffffffffL))
        {
            l30 = (long)((int)(l & 0xffffffffL) + Block.llI) & 0xffffffffL ^ l30 & 0xffffffff00000000L;
            l = (long)((int)(l30 & 0xffffffffL) % DestroyerBonus.._fld5SS5) & 0xffffffffL ^ l & 0xffffffff00000000L;
        }
        l35 = (long)((int)((l16 & 0xffffffff00000000L) >> DoubleBallBonus.._cls55.) % S$55) & 0xffffffffL ^ l35 & 0xffffffff00000000L;
        if((int)(((long)((int)(l35 & 0xffffffffL) << -158) & 0xffffffffL ^ l23 & 0xffffffff00000000L) & 0xffffffffL) != (int)(((long)(i & TripleBonus.l1l1) & 0xffffffffL ^ l27 & 0xffffffff00000000L) & 0xffffffffL))
            l16 = (long)((int)(((long)((int)((l16 & 0xffffffff00000000L) >> DoubleBallBonus.._cls55.) + Block.llI) & 0xffffffffL ^ l28 & 0xffffffff00000000L) & 0xffffffffL) % DestroyerBonus.._fld5SS5) << DoubleBallBonus.._cls55. & 0xffffffff00000000L ^ l16 & 0xffffffffL;
        l16 = (long)((int)(((long)((int)(l31 & 0xffffffffL) % S$55) & 0xffffffffL ^ l19 & 0xffffffff00000000L) & 0xffffffffL) << -349) & 0xffffffffL ^ l16 & 0xffffffff00000000L;
        if((int)(l16 & 0xffffffffL) != (int)(((long)(i & BouncingMovementCalculator.I1l1l) & 0xffffffffL ^ l18 & 0xffffffff00000000L) & 0xffffffffL))
            l31 = (long)((int)(((long)((int)(l31 & 0xffffffffL) + Block.llI) & 0xffffffffL ^ l24 & 0xffffffff00000000L) & 0xffffffffL) % DestroyerBonus.._fld5SS5) & 0xffffffffL ^ l31 & 0xffffffff00000000L;
        if((int)(((long)((int)(((long)((int)(l40 & 0xffffffffL) % S$55) & 0xffffffffL ^ l20 & 0xffffffff00000000L) & 0xffffffffL) << 196) & 0xffffffffL ^ l3 & 0xffffffff00000000L) & 0xffffffffL) != (int)(((long)(i & ActorArray.ActorIterator.IIII) & 0xffffffffL ^ l11 & 0xffffffff00000000L) & 0xffffffffL))
        {
            l2 = (long)((int)(l40 & 0xffffffffL) + Block.llI) << ActorArray.ActorIterator.IIII & 0xffffffff0000L ^ l2 & 0xffff00000000ffffL;
            l40 = (long)((int)((l2 & 0xffffffff0000L) >> ActorArray.ActorIterator.IIII) % DestroyerBonus.._fld5SS5) & 0xffffffffL ^ l40 & 0xffffffff00000000L;
        }
        if((int)(((long)((int)(((long)((int)(l10 & 0xffffffffL) % S$55) & 0xffffffffL ^ l33 & 0xffffffff00000000L) & 0xffffffffL) << 261) & 0xffffffffL ^ l13 & 0xffffffff00000000L) & 0xffffffffL) == (i & DoubleBallBonus.._cls55.))
            break MISSING_BLOCK_LABEL_1866;
        l10 = (long)((int)(((long)((int)(l10 & 0xffffffffL) + Block.llI) & 0xffffffffL ^ l32 & 0xffffffff00000000L) & 0xffffffffL) % DestroyerBonus.._fld5SS5) & 0xffffffffL ^ l10 & 0xffffffff00000000L;
        if((byte)0x261e145a % Paddle.S5S == 0)
            break MISSING_BLOCK_LABEL_1866;
        null;
        throw ;
        l8 = (long)((int)((((long)((int)(l22 & 0xffffffffL) + (int)((l16 & 0xffffffff00000000L) >> DoubleBallBonus.._cls55.)) << DoubleBallBonus.._cls55. & 0xffffffff00000000L ^ l35 & 0xffffffffL) & 0xffffffff00000000L) >> DoubleBallBonus.._cls55.) + (int)(l40 & 0xffffffffL)) << 18 & 0x3fffffffc0000L ^ l8 & 0xfffc00000003ffffL;
        l12 = (long)((int)(((long)(NullBonus.._fld5S5S - (int)((l8 & 0x3fffffffc0000L) >> 18)) & 0xffffffffL ^ l21 & 0xffffffff00000000L) & 0xffffffffL) % DestroyerBonus.._fld5SS5) & 0xffffffffL ^ l12 & 0xffffffff00000000L;
        if((int)(l12 & 0xffffffffL) < 0)
            l12 = (long)(DestroyerBonus.._fld5SS5 + (int)(l12 & 0xffffffffL)) ^ l12 & 0xffffffff00000000L;
        l37 = (long)((int)(((long)(MovingResults.I1I1 - (int)(((long)((int)(((long)((int)(l & 0xffffffffL) + (int)(l31 & 0xffffffffL)) & 0xffffffffL ^ l14 & 0xffffffff00000000L) & 0xffffffffL) + (int)(l10 & 0xffffffffL)) & 0xffffffffL ^ l15 & 0xffffffff00000000L) & 0xffffffffL)) & 0xffffffffL ^ l25 & 0xffffffff00000000L) & 0xffffffffL) % DestroyerBonus.._fld5SS5) & 0xffffffffL ^ l37 & 0xffffffff00000000L;
        if((int)(l37 & 0xffffffffL) < 0)
            l37 = (long)(DestroyerBonus.._fld5SS5 + (int)(l37 & 0xffffffffL)) ^ l37 & 0xffffffff00000000L;
        l34 = (long)((int)(l & 0xffffffffL) + LifeBonus....S) & 0xffffffffL ^ l34 & 0xffffffff00000000L;
        l29 = (long)((int)((l16 & 0xffffffff00000000L) >> DoubleBallBonus.._cls55.) + LifeBonus....S) << DoubleBallBonus.._cls55. & 0xffffffff00000000L ^ l29 & 0xffffffffL;
        l6 = (long)((int)(l31 & 0xffffffffL) + LifeBonus....S) & 0xffffffffL ^ l6 & 0xffffffff00000000L;
        l30 = (long)((int)(l40 & 0xffffffffL) + LifeBonus....S) << DoubleBallBonus.._cls55. & 0xffffffff00000000L ^ l30 & 0xffffffffL;
        l38 = (long)((int)(l10 & 0xffffffffL) + LifeBonus....S) & 0xffffffffL ^ l38 & 0xffffffff00000000L;
        l17 = (long)((int)(l12 & 0xffffffffL) + LifeBonus....S) & 0xffffffffL ^ l17 & 0xffffffff00000000L;
        i = (int)(l37 & 0xffffffffL) + LifeBonus....S;
        StringBuffer stringbuffer = JVM INSTR new #69  <Class StringBuffer>;
        stringbuffer.StringBuffer();
        stringbuffer = ImageMovingActor.draw((char)(int)(((long)(char)(int)(((long)((int)(l22 & 0xffffffffL) + LifeBonus....S) & 0xffffffffL ^ l26 & 0xffffffff00000000L) & 0xffffffffL) & 65535L ^ l1 & 0xffffffffffff0000L) & 65535L), stringbuffer);
        stringbuffer = ImageMovingActor.draw((char)(int)((((long)(char)(int)(l34 & 0xffffffffL) << DoubleBallBonus.._cls55. & 0xffff00000000L ^ l5 & 0xffff0000ffffffffL) & 0xffff00000000L) >> DoubleBallBonus.._cls55.), stringbuffer);
        l2 = (long)(char)(int)(l6 & 0xffffffffL) & 65535L ^ l2 & 0xffffffffffff0000L;
        stringbuffer = ImageMovingActor.draw((char)(int)(l2 & 65535L), ImageMovingActor.draw((char)(int)((((long)(char)(int)((l29 & 0xffffffff00000000L) >> DoubleBallBonus.._cls55.) << DoubleBallBonus.IIll & 0x7fff800000000L ^ l & 0xfff80007ffffffffL) & 0x7fff800000000L) >> DoubleBallBonus.IIll), stringbuffer));
        return Border.collisionVector(ImageMovingActor.draw((char)(int)(((long)(char)i & 65535L ^ l8 & 0xffffffffffff0000L) & 65535L), ImageMovingActor.draw((char)(int)(((long)(char)(int)(l17 & 0xffffffffL) & 65535L ^ l4 & 0xffffffffffff0000L) & 65535L), ImageMovingActor.draw((char)(int)((((long)(char)(int)(l38 & 0xffffffffL) << 48 & 0xffff000000000000L ^ l2 & 0xffffffffffffL) & 0xffff000000000000L) >> 48), ImageMovingActor.draw((char)(int)(((long)(char)(int)((l30 & 0xffffffff00000000L) >> DoubleBallBonus.._cls55.) & 65535L ^ l7 & 0xffffffffffff0000L) & 65535L), stringbuffer)))));
    }

    private static int decodeLevel(String s)
    {
        long l1;
        long l2;
        long l3;
        long l4;
        long l5;
        long l6;
        long l7;
        long l8;
        long l9;
        long l10;
        long l11;
        long l12;
        long l14;
        long l15;
        long l16;
        long l17;
        long l18;
        long l19;
        long l20;
        long l21;
        long l22;
        long l23;
        long l24;
        long l25;
        long l26;
        long l27;
        long l28;
        long l29;
        long l30;
        long l31;
        long l32;
        long l33;
        l33 = Ball.S$$;
        l32 = Ball.S$$;
        l32 = Ball.S$$;
        l32 = Ball.S$$;
        l32 = Ball.S$$;
        l31 = Ball.S$$;
        l31 = Ball.S$$;
        l31 = Ball.S$$;
        l30 = Ball.S$$;
        l30 = Ball.S$$;
        l30 = Ball.S$$;
        l30 = Ball.S$$;
        l30 = Ball.S$$;
        l30 = Ball.S$$;
        l30 = Ball.S$$;
        l30 = Ball.S$$;
        l30 = Ball.S$$;
        l30 = Ball.S$$;
        l29 = Ball.S$$;
        l29 = Ball.S$$;
        l29 = Ball.S$$;
        l28 = Ball.S$$;
        l28 = Ball.S$$;
        l27 = Ball.S$$;
        l27 = Ball.S$$;
        l26 = Ball.S$$;
        l25 = Ball.S$$;
        l25 = Ball.S$$;
        l25 = Ball.S$$;
        l25 = Ball.S$$;
        l25 = Ball.S$$;
        l24 = Ball.S$$;
        l24 = Ball.S$$;
        l24 = Ball.S$$;
        l24 = Ball.S$$;
        l24 = Ball.S$$;
        l23 = Ball.S$$;
        l23 = Ball.S$$;
        l23 = Ball.S$$;
        l23 = Ball.S$$;
        l23 = Ball.S$$;
        l22 = Ball.S$$;
        l22 = Ball.S$$;
        l22 = Ball.S$$;
        l22 = Ball.S$$;
        l22 = Ball.S$$;
        l22 = Ball.S$$;
        l22 = Ball.S$$;
        l21 = Ball.S$$;
        l21 = Ball.S$$;
        l21 = Ball.S$$;
        l21 = Ball.S$$;
        l21 = Ball.S$$;
        l21 = Ball.S$$;
        l21 = Ball.S$$;
        l20 = Ball.S$$;
        l20 = Ball.S$$;
        l20 = Ball.S$$;
        l20 = Ball.S$$;
        l20 = Ball.S$$;
        l20 = Ball.S$$;
        l20 = Ball.S$$;
        l19 = Ball.S$$;
        l19 = Ball.S$$;
        l19 = Ball.S$$;
        l19 = Ball.S$$;
        l19 = Ball.S$$;
        l19 = Ball.S$$;
        l19 = Ball.S$$;
        l19 = Ball.S$$;
        l19 = Ball.S$$;
        l19 = Ball.S$$;
        l19 = Ball.S$$;
        l19 = Ball.S$$;
        l19 = Ball.S$$;
        l19 = Ball.S$$;
        l19 = Ball.S$$;
        l19 = Ball.S$$;
        l19 = Ball.S$$;
        l19 = Ball.S$$;
        l19 = Ball.S$$;
        l19 = Ball.S$$;
        l19 = Ball.S$$;
        l19 = Ball.S$$;
        l18 = Ball.S$$;
        l18 = Ball.S$$;
        l18 = Ball.S$$;
        l17 = Ball.S$$;
        l17 = Ball.S$$;
        l16 = Ball.S$$;
        l15 = Ball.S$$;
        l15 = Ball.S$$;
        l15 = Ball.S$$;
        l15 = Ball.S$$;
        l15 = Ball.S$$;
        l15 = Ball.S$$;
        l15 = Ball.S$$;
        l15 = Ball.S$$;
        l15 = Ball.S$$;
        l15 = Ball.S$$;
        l15 = Ball.S$$;
        l15 = Ball.S$$;
        l15 = Ball.S$$;
        l14 = Ball.S$$;
        l14 = Ball.S$$;
        l14 = Ball.S$$;
        long l13 = Ball.S$$;
        l12 = Ball.S$$;
        l11 = Ball.S$$;
        l11 = Ball.S$$;
        l11 = Ball.S$$;
        l11 = Ball.S$$;
        l11 = Ball.S$$;
        l10 = Ball.S$$;
        l10 = Ball.S$$;
        l9 = Ball.S$$;
        l9 = Ball.S$$;
        l9 = Ball.S$$;
        l9 = Ball.S$$;
        l9 = Ball.S$$;
        l8 = Ball.S$$;
        l8 = Ball.S$$;
        l7 = Ball.S$$;
        l6 = Ball.S$$;
        l5 = Ball.S$$;
        l5 = Ball.S$$;
        l4 = Ball.S$$;
        l3 = Ball.S$$;
        l3 = Ball.S$$;
        l2 = Ball.S$$;
        l2 = Ball.S$$;
        l1 = Ball.S$$;
        l1 = Ball.S$$;
        long l = Ball.S$$;
        l = Ball.S$$;
        l = Ball.S$$;
        if((int)(((long)BouncingMovementCalculator.move(s) & 0xffffffffL ^ l13 & 0xffffffff00000000L) & 0xffffffffL) != BouncingMovementCalculator.I1l1l)
            return Block.SSSS;
        long l34;
        l6 = (long)LevelConstructor.toBool(BonusActor.lll, s) << MovingActor.$S$$ & 0x1fffe0000L ^ l6 & 0xfffffffe0001ffffL;
        l26 = (long)((char)(int)((l6 & 0x1fffe0000L) >> MovingActor.$S$$) - LifeBonus....S) & 0xffffffffL ^ l26 & 0xffffffff00000000L;
        l10 = (long)((char)(int)(((long)LevelConstructor.toBool(Block.llI, s) & 65535L ^ l8 & 0xffffffffffff0000L) & 65535L) - LifeBonus....S) << MovingActor.$S$$ & 0x1fffffffe0000L ^ l10 & 0xfffe00000001ffffL;
        l23 = (long)((char)(int)(((long)LevelConstructor.toBool(S$55, s) & 65535L ^ l9 & 0xffffffffffff0000L) & 65535L) - LifeBonus....S) & 0xffffffffL ^ l23 & 0xffffffff00000000L;
        l4 = (long)LevelConstructor.toBool(Paddle.S5S, s) << 34 & 0x3fffc00000000L ^ l4 & 0xfffc0003ffffffffL;
        int i = (char)(int)((l4 & 0x3fffc00000000L) >> 34) - LifeBonus....S;
        l2 = (long)((char)(int)(((long)LevelConstructor.toBool(TripleBonus.l1l1, s) & 65535L ^ l7 & 0xffffffffffff0000L) & 65535L) - LifeBonus....S) & 0xffffffffL ^ l2 & 0xffffffff00000000L;
        l12 = (long)LevelConstructor.toBool(DestroyerBonus.IlI, s) << DoubleBallBonus.IIll & 0x7fff800000000L ^ l12 & 0xfff80007ffffffffL;
        l22 = (long)((char)(int)((l12 & 0x7fff800000000L) >> DoubleBallBonus.IIll) - LifeBonus....S) << DoubleBallBonus.._cls55. & 0xffffffff00000000L ^ l22 & 0xffffffffL;
        l31 = (long)((char)(int)(((long)LevelConstructor.toBool(StraightLineMovementCalculator.S5$, s) & 65535L ^ l6 & 0xffffffffffff0000L) & 65535L) - LifeBonus....S) & 0xffffffffL ^ l31 & 0xffffffff00000000L;
        l10 = (long)LevelConstructor.toBool(LifeBonus.S55., s) & 65535L ^ l10 & 0xffffffffffff0000L;
        l24 = (long)((char)(int)(l10 & 65535L) - LifeBonus....S) & 0xffffffffL ^ l24 & 0xffffffff00000000L;
        if(NullBonus.._fld5S5S != (int)(((long)((int)(((long)((int)(((long)((int)(((long)((int)(l26 & 0xffffffffL) + (int)(l23 & 0xffffffffL)) & 0xffffffffL ^ l25 & 0xffffffff00000000L) & 0xffffffffL) + (int)(l2 & 0xffffffffL)) & 0xffffffffL ^ l11 & 0xffffffff00000000L) & 0xffffffffL) + (int)(l31 & 0xffffffffL)) & 0xffffffffL ^ l12 & 0xffffffff00000000L) & 0xffffffffL) % DestroyerBonus.._fld5SS5) & 0xffffffffL ^ l1 & 0xffffffff00000000L) & 0xffffffffL))
            return Block.SSSS;
        l5 = (long)((int)((l10 & 0x1fffffffe0000L) >> MovingActor.$S$$) + i) << DoubleBallBonus.._cls55. & 0xffffffff00000000L ^ l5 & 0xffffffffL;
        if(MovingResults.I1I1 != (int)(((long)((int)(((long)((int)(((long)((int)((l5 & 0xffffffff00000000L) >> DoubleBallBonus.._cls55.) + (int)((l22 & 0xffffffff00000000L) >> DoubleBallBonus.._cls55.)) & 0xffffffffL ^ l19 & 0xffffffff00000000L) & 0xffffffffL) + (int)(l24 & 0xffffffffL)) & 0xffffffffL ^ l33 & 0xffffffff00000000L) & 0xffffffffL) % DestroyerBonus.._fld5SS5) & 0xffffffffL ^ l30 & 0xffffffff00000000L) & 0xffffffffL))
            return Block.SSSS;
        l34 = (long)((int)((((long)((int)(((long)BonusActor.lll & 0xffffffffL ^ l29 & 0xffffffff00000000L) & 0xffffffffL) + (int)(((long)((int)(((long)((int)(l26 & 0xffffffffL) % S$55) & 0xffffffffL ^ l3 & 0xffffffff00000000L) & 0xffffffffL) * Block.llI) & 0xffffffffL ^ l14 & 0xffffffff00000000L) & 0xffffffffL)) << DoubleBallBonus.._cls55. & 0xffffffff00000000L ^ l31 & 0xffffffffL) & 0xffffffff00000000L) >> DoubleBallBonus.._cls55.) + (int)(((long)((int)(((long)((int)((l10 & 0x1fffffffe0000L) >> MovingActor.$S$$) % S$55) & 0xffffffffL ^ l32 & 0xffffffff00000000L) & 0xffffffffL) << 129) & 0xffffffffL ^ l28 & 0xffffffff00000000L) & 0xffffffffL)) & 0xffffffffL ^ l22 & 0xffffffff00000000L;
        l16 = (long)((int)(((long)(i % S$55) & 0xffffffffL ^ l18 & 0xffffffff00000000L) & 0xffffffffL) << Paddle.S5S) << DoubleBallBonus.._cls55. & 0xffffffff00000000L ^ l16 & 0xffffffffL;
        l24 = (long)((int)(((long)((int)(((long)((int)(l34 & 0xffffffffL) + ((int)(((long)((int)(l23 & 0xffffffffL) % S$55) & 0xffffffffL ^ l17 & 0xffffffff00000000L) & 0xffffffffL) << -478)) & 0xffffffffL ^ l27 & 0xffffffff00000000L) & 0xffffffffL) + (int)((l16 & 0xffffffff00000000L) >> DoubleBallBonus.._cls55.)) & 0xffffffffL ^ l5 & 0xffffffff00000000L) & 0xffffffffL) + (int)(((long)((int)(((long)((int)(l2 & 0xffffffffL) % S$55) & 0xffffffffL ^ l21 & 0xffffffff00000000L) & 0xffffffffL) << 68) & 0xffffffffL ^ l4 & 0xffffffff00000000L) & 0xffffffffL)) << DoubleBallBonus.._cls55. & 0xffffffff00000000L ^ l24 & 0xffffffffL;
        (int)(((long)((int)((l34 & 0xffffffff00000000L) >> DoubleBallBonus.._cls55.) % S$55) & 0xffffffffL ^ l15 & 0xffffffff00000000L) & 0xffffffffL);
        Ball.Il11l.booleanValue();
        JVM INSTR ifge 1726;
           goto _L1 _L2
_L1:
        JVM INSTR pop ;
        break MISSING_BLOCK_LABEL_1790;
_L3:
        throw ;
_L2:
        -283;
        JVM INSTR ishl ;
        (long);
        0xffffffffL;
        JVM INSTR land ;
        l16 & 0xffffffff00000000L;
        JVM INSTR lxor ;
        l16;
        return (int)(((long)((int)((l24 & 0xffffffff00000000L) >> DoubleBallBonus.._cls55.) + (int)(l16 & 0xffffffffL)) & 0xffffffffL ^ l20 & 0xffffffff00000000L) & 0xffffffffL);
        null;
          goto _L3
    }

    public BreakoutGame(Stage stage, BreakoutApplet breakoutapplet, Hashtable hashtable)
    {
        S555 = new Vector();
        $S5$ = new Vector();
        I1IIl = new LevelConstructor();
        S55$5S = BonusActor.lll;
        S$5S = BonusActor.lll;
        I1ll = Paddle.S5S;
        $S55 = BonusActor.lll;
        IllI = BonusActor.lll;
        lIlI = new NullBonus();
        Bonus abonus[] = new Bonus[BouncingMovementCalculator.I1l1l];
        Object obj = JVM INSTR new #363 <Class BreakoutGame$LongBonus>;
        ((LongBonus) (obj)).this. LongBonus();
        abonus[BonusActor.lll] = ((Bonus) (obj));
        obj = JVM INSTR new #168 <Class BreakoutGame$StickyBonus>;
        ((StickyBonus) (obj)).this. StickyBonus();
        abonus[Block.llI] = ((Bonus) (obj));
        obj = JVM INSTR new #462 <Class BreakoutGame$GunBonus>;
        ((GunBonus) (obj)).this. GunBonus();
        abonus[S$55] = ((Bonus) (obj));
        obj = JVM INSTR new #428 <Class BreakoutGame$BallSplitterBonus>;
        ((BallSplitterBonus) (obj)).this. BallSplitterBonus();
        abonus[Paddle.S5S] = ((Bonus) (obj));
        obj = JVM INSTR new #312 <Class BreakoutGame$LifeBonus>;
        ((LifeBonus) (obj)).this. LifeBonus();
        abonus[TripleBonus.l1l1] = ((Bonus) (obj));
        obj = JVM INSTR new #94  <Class BreakoutGame$TripleBonus>;
        ((TripleBonus) (obj)).this. TripleBonus();
        abonus[DestroyerBonus.IlI] = ((Bonus) (obj));
        obj = JVM INSTR new #60  <Class BreakoutGame$DoubleBallBonus>;
        ((DoubleBallBonus) (obj)).this. DoubleBallBonus();
        abonus[StraightLineMovementCalculator.S5$] = ((Bonus) (obj));
        obj = JVM INSTR new #672 <Class BreakoutGame$SlowBallBonus>;
        ((SlowBallBonus) (obj)).this. SlowBallBonus();
        abonus[LifeBonus.S55.] = ((Bonus) (obj));
        S5S5 = abonus;
        I11l = new StringBuffer();
        S$5$ = stage;
        Il11I = hashtable;
        S5$5$ = breakoutapplet;
    }

    public void addBlock(int i, int j, String s)
    {
        $S55 = $S55 + Block.llI;
        s = (Image)BonusActor.hit(s, Il11I);
        S$5$.add(new Block(this, S$5$, s, S5$5$, i, j));
    }

    public void addImortalBlock(int i, int j, String s)
    {
        s = (Image)BonusActor.hit(s, Il11I);
        S$5$.add(new ImmortalBlock(this, S$5$, s, S5$5$, i, j));
    }

    public void addPaddle(int i, int j, String s, String s1, String s2, String s3, boolean flag)
    {
        s = (Image)BonusActor.hit(s, Il11I);
        s1 = (Image)BonusActor.hit(s1, Il11I);
        s2 = (Image)BonusActor.hit(s2, Il11I);
        s3 = (Image)BonusActor.hit(s3, Il11I);
        flag = new Paddle(this, S$5$, s, s1, s2, s3, S5$5$, i, j, flag);
        LevelConstructor.parseLevel(flag, S555);
        S$5$.add(flag);
    }

    public void topBounce(boolean flag)
    {
        int i;
        long l;
        l = Ball.S$$;
        l = Ball.S$$;
        l = Ball.S$$;
        i = BonusActor.lll;
        l = (long)BonusActor.lll << DoubleBallBonus.._cls55. & 0xffffffff00000000L ^ Ball.S$$ & 0xffffffffL;
        l = (long)S$5$.getStageBounds().width & 0xffffffffL ^ l & 0xffffffff00000000L;
        if(!flag) goto _L2; else goto _L1
_L1:
        S$5$.add(new Border(i, (int)((l & 0xffffffff00000000L) >> DoubleBallBonus.._cls55.), (int)(l & 0xffffffffL), Block.llI));
          goto _L3
_L2:
        S$5$;
        DestroyerMovementCalculator.$5$$$;
        JVM INSTR ifge 119;
           goto _L4 _L5
_L4:
        JVM INSTR pop ;
        break MISSING_BLOCK_LABEL_155;
_L6:
        throw ;
_L5:
        new KillingFloor(i, (int)((l & 0xffffffff00000000L) >> DoubleBallBonus.._cls55.), (int)(l & 0xffffffffL), Block.llI);
        add();
_L3:
        return;
        null;
          goto _L6
    }

    public void bottomBounce(boolean flag)
    {
        int i;
        int j;
        long l;
        l = (long)BonusActor.lll & 0xffffffffL ^ Ball.S$$ & 0xffffffff00000000L;
        l = (long)S$5$.getStageBounds().height << DoubleBallBonus.._cls55. & 0xffffffff00000000L ^ l & 0xffffffffL;
        i = (int)((l & 0xffffffff00000000L) >> DoubleBallBonus.._cls55.) - Block.llI;
        j = S$5$.getStageBounds().width;
        if(!flag)
            break MISSING_BLOCK_LABEL_120;
        S$5$.add(new Border((int)(l & 0xffffffffL), i, j, Block.llI));
        BallSplitterBonus.lllIl;
        JVM INSTR ifge 117;
           goto _L1 _L2
_L1:
        break MISSING_BLOCK_LABEL_115;
_L2:
        break MISSING_BLOCK_LABEL_148;
        null;
        throw ;
        S$5$.add(new KillingFloor((int)(l & 0xffffffffL), i, j, Block.llI));
    }

    public synchronized void start()
    {
        long l2 = Ball.S$$;
        long l1 = Ball.S$$;
        l1 = Ball.S$$;
        l1 = Ball.S$$;
        l1 = Ball.S$$;
        l1 = Ball.S$$;
        l1 = Ball.S$$;
        l1 = Ball.S$$;
        l1 = Ball.S$$;
        l1 = Ball.S$$;
        long l = Ball.S$$;
        l = Ball.S$$;
        l = Ball.S$$;
        l = Ball.S$$;
        S55$5S = Block.llI;
        S$5$.clear();
        MovingActor.intersects($S5$);
        MovingActor.intersects(S555);
        $S55 = BonusActor.lll;
        Ball.resetBallSpeed();
        setBonus(new NullBonus());
        S5$5$.setBonus(ActorArray.iterator(lIlI));
        I1IIl.loadLevel((int)(((long)S$5S & 0xffffffffL ^ l1 & 0xffffffff00000000L) & 0xffffffffL), this);
        I1ll = Paddle.S5S;
        S5$5$.setLivesLeft(I1ll);
        S5$5$.setBlocksLeft((int)(((long)$S55 & 0xffffffffL ^ l2 & 0xffffffff00000000L) & 0xffffffffL));
        S5$5$.setLevel(S$5S);
        createBalls();
        S$5$.start();
        S55$5S = BonusActor.lll;
    }

    public synchronized void stop()
    {
        S$5$.stop();
    }

    public synchronized void blockDied(int i, int j)
    {
        long l;
        long l1;
        long l2;
        long l3;
        long l4;
        long l5;
        long l6;
        l5 = Ball.S$$;
        l5 = Ball.S$$;
        l5 = Ball.S$$;
        l5 = Ball.S$$;
        l5 = Ball.S$$;
        l4 = Ball.S$$;
        l4 = Ball.S$$;
        l4 = Ball.S$$;
        l4 = Ball.S$$;
        l4 = Ball.S$$;
        l4 = Ball.S$$;
        l4 = Ball.S$$;
        l4 = Ball.S$$;
        l4 = Ball.S$$;
        l3 = Ball.S$$;
        l3 = Ball.S$$;
        l3 = Ball.S$$;
        l3 = Ball.S$$;
        l3 = Ball.S$$;
        l3 = Ball.S$$;
        l3 = Ball.S$$;
        l2 = Ball.S$$;
        l1 = Ball.S$$;
        l1 = Ball.S$$;
        l1 = Ball.S$$;
        l1 = Ball.S$$;
        l1 = Ball.S$$;
        l = 0xaae9ad09c5bac7e1L;
        l6 = (long)$S55 & 0xffffffffL ^ Ball.S$$ & 0xffffffff00000000L;
        $S55 = (int)(l6 & 0xffffffffL) - Block.llI;
        if((int)(((long)$S55 & 0xffffffffL ^ Ball.S$$ & 0xffffffff00000000L) & 0xffffffffL) != 0) goto _L2; else goto _L1
_L1:
        l1 = (long)I1ll & 0xffffffffL ^ l1 & 0xffffffff00000000L;
        if((int)(l1 & 0xffffffffL) != 0)
            l1 = (long)Block.llI << 45 & 0x200000000000L ^ l1 & 0xffffdfffffffffffL;
        else
            l1 = (long)BonusActor.lll << 45 & 0x200000000000L ^ l1 & 0xffffdfffffffffffL;
        l1 = (long)S55$5S << 42 & 0x40000000000L ^ l1 & 0xfffffbffffffffffL;
        if((int)((l1 & 0x40000000000L) >> 42) != 0)
            l1 = (long)BonusActor.lll << 49 & 0x2000000000000L ^ l1 & 0xfffdffffffffffffL;
        else
            l1 = (long)Block.llI << 49 & 0x2000000000000L ^ l1 & 0xfffdffffffffffffL;
        l1 = (long)((int)((l1 & 0x200000000000L) >> 45) & (int)((l1 & 0x2000000000000L) >> 49)) << NullBonus.lIll & 0x10000000000L ^ l1 & 0xfffffeffffffffffL;
        if((int)((l1 & 0x10000000000L) >> NullBonus.lIll) == 0) goto _L2; else goto _L3
_L3:
        S$5S = (int)(((long)((int)(((long)S$5S & 0xffffffffL ^ l2 & 0xffffffff00000000L) & 0xffffffffL) + Block.llI) & 0xffffffffL ^ l5 & 0xffffffff00000000L) & 0xffffffffL);
        DefaultStage.access$0(new Restart());
          goto _L4
_L2:
        if((int)(((long)$S55 & 0xffffffffL ^ l4 & 0xffffffff00000000L) & 0xffffffffL) == 0) goto _L4; else goto _L5
_L5:
        Ball.speedBalls();
        S5$5$.setBlocksLeft((int)(((long)$S55 & 0xffffffffL ^ l3 & 0xffffffff00000000L) & 0xffffffffL));
        if((byte)(int)((((long)(FixedActor.die(l) != ActorArray.ActorIterator.lI1) << DoubleBallBonus.._cls55. & 0xff00000000L ^ l1 & 0xffffff00ffffffffL) & 0xff00000000L) >> DoubleBallBonus.._cls55.) <= 0) goto _L4; else goto _L6
_L6:
        Bonus bonus;
        Image image;
        BonusActor bonusactor1;
        Stage stage;
        BreakoutApplet breakoutapplet;
        image = (Image)BonusActor.hit(Ball.______, Il11I);
        bonus = getRandomBonus();
        bonusactor1 = JVM INSTR new #433 <Class BonusActor>;
        stage = S$5$;
        breakoutapplet = S5$5$;
        bonusactor1;
        bonus;
        this;
        Paddle.S5$S5S.booleanValue();
        JVM INSTR ifge 608;
           goto _L7 _L8
_L7:
        JVM INSTR pop ;
          goto _L9
_L10:
        throw ;
_L8:
        stage;
        image;
        breakoutapplet;
        i;
        j;
        BonusActor();
        BonusActor bonusactor = bonusactor1;
        if((int)((((long)S$5$.getIntersections(bonusactor.getBounds(), (int)((((long)bonusactor.collisionVector() << DoubleBallBonus.._cls55. & 0xffffffff00000000L ^ l6 & 0xffffffffL) & 0xffffffff00000000L) >> DoubleBallBonus.._cls55.)).length << DoubleBallBonus.._cls55. & 0xffffffff00000000L ^ l2 & 0xffffffffL) & 0xffffffff00000000L) >> DoubleBallBonus.._cls55.) == 0)
            S$5$.add(bonusactor);
_L4:
        return;
_L9:
        JVM INSTR pop ;
        JVM INSTR pop ;
        null;
          goto _L10
    }

    public synchronized void ballDied(Ball ball)
    {
        long l;
        long l1;
        long l3;
        long l4;
        l4 = Ball.S$$;
        l3 = Ball.S$$;
        l3 = Ball.S$$;
        l3 = Ball.S$$;
        l3 = Ball.S$$;
        l3 = Ball.S$$;
        l3 = Ball.S$$;
        l3 = Ball.S$$;
        l3 = Ball.S$$;
        l3 = Ball.S$$;
        l3 = Ball.S$$;
        l3 = Ball.S$$;
        l3 = Ball.S$$;
        l3 = Ball.S$$;
        l3 = Ball.S$$;
        l3 = Ball.S$$;
        l3 = Ball.S$$;
        l3 = Ball.S$$;
        long l2 = Ball.S$$;
        l2 = Ball.S$$;
        l2 = Ball.S$$;
        l2 = Ball.S$$;
        l2 = Ball.S$$;
        l1 = Ball.S$$;
        l1 = Ball.S$$;
        l1 = Ball.S$$;
        l1 = Ball.S$$;
        l1 = Ball.S$$;
        l = Ball.S$$;
        DestroyerMovementCalculator.advanceToCollision(ball, $S5$);
        if((int)(((long)DefaultStage.access$4($S5$) & 0xffffffffL ^ l2 & 0xffffffff00000000L) & 0xffffffffL) == 0)
        {
            l = (long)Block.llI << NullBonus.lIll & 0x10000000000L ^ l & 0xfffffeffffffffffL;
            break MISSING_BLOCK_LABEL_221;
        }
        l = (long)BonusActor.lll << NullBonus.lIll & 0x10000000000L ^ l & 0xfffffeffffffffffL;
        if((int)(((long)$S55 & 0xffffffffL ^ l4 & 0xffffffff00000000L) & 0xffffffffL) != 0)
            l = (long)Block.llI << 48 & 0x1000000000000L ^ l & 0xfffeffffffffffffL;
        else
            l = (long)BonusActor.lll << 48 & 0x1000000000000L ^ l & 0xfffeffffffffffffL;
        l = (long)S55$5S & ImmortalBlock.III ^ ((long)((int)((l & 0x10000000000L) >> NullBonus.lIll) & (int)((l & 0x1000000000000L) >> 48)) << 52 & 0x10000000000000L ^ l & 0xffefffffffffffffL) & -2L;
        if((int)(l & ImmortalBlock.III) != 0)
            l = (long)BonusActor.lll << 42 & 0x40000000000L ^ l & 0xfffffbffffffffffL;
        else
            l = (long)Block.llI << 42 & 0x40000000000L ^ l & 0xfffffbffffffffffL;
        l = (long)((int)((l & 0x10000000000000L) >> 52) & (int)((l & 0x40000000000L) >> 42)) << 57 & 0x200000000000000L ^ l & 0xfdffffffffffffffL;
        if((int)((l & 0x200000000000000L) >> 57) == 0)
            break MISSING_BLOCK_LABEL_556;
        I1ll = (int)((((long)(I1ll - Block.llI) << DestroyerBonus.IlI & 0x1fffffffe0L ^ l & 0xffffffe00000001fL) & 0x1fffffffe0L) >> DestroyerBonus.IlI);
        Ball.resetBallSpeed();
        if(I1ll == 0)
        {
            I1ll = Paddle.S5S;
            $S55 = BonusActor.lll;
            DefaultStage.access$0(new Restart());
            break MISSING_BLOCK_LABEL_706;
        }
        S5$5$.setLivesLeft((int)(((long)I1ll & 0xffffffffL ^ l3 & 0xffffffff00000000L) & 0xffffffffL));
        ActorArray.ActorIterator.SS5S$5;
        JVM INSTR ifge 537;
           goto _L1 _L2
_L1:
        break MISSING_BLOCK_LABEL_535;
_L2:
        break MISSING_BLOCK_LABEL_537;
        null;
        throw ;
        setBonus(new NullBonus());
        createBalls();
        break MISSING_BLOCK_LABEL_706;
        if((int)(((long)DefaultStage.access$4($S5$) & 0xffffffffL ^ l1 & 0xffffffff00000000L) & 0xffffffffL) == Block.llI)
            l = (long)Block.llI << 56 & 0x100000000000000L ^ l & 0xfeffffffffffffffL;
        else
            l = (long)BonusActor.lll << 56 & 0x100000000000000L ^ l & 0xfeffffffffffffffL;
        l = (long)IllI << Paddle.S5S & 8L ^ l & -9L;
        if((int)((((long)((int)((l & 0x100000000000000L) >> 56) & (int)((l & 8L) >> Paddle.S5S)) << 44 & 0x100000000000L ^ l & 0xffffefffffffffffL) & 0x100000000000L) >> 44) != 0)
            ((Ball)topBounce(BonusActor.lll, $S5$)).forceSplit();
    }

    public synchronized void ballCreated(Ball ball)
    {
        LevelConstructor.parseLevel(ball, $S5$);
    }

    private synchronized void movePaddleLeft()
    {
        int i = BonusActor.lll;
          goto _L1
_L5:
        (Paddle)topBounce(i, S555);
        MovingActor.$S$5;
        JVM INSTR ifge 29;
           goto _L2 _L3
_L2:
        JVM INSTR pop ;
        break MISSING_BLOCK_LABEL_53;
_L6:
        throw ;
_L3:
        DestroyerMovementCalculator.$S55$;
        setDx();
        i++;
_L1:
        if(i < DefaultStage.access$4(S555)) goto _L5; else goto _L4
_L4:
        return;
        null;
          goto _L6
    }

    private synchronized void movePaddleRight()
    {
        int i = BonusActor.lll;
          goto _L1
_L5:
        (Paddle)topBounce(i, S555);
        LongBonus.._cls5S._fld5;
        JVM INSTR ifge 29;
           goto _L2 _L3
_L2:
        JVM INSTR pop ;
        break MISSING_BLOCK_LABEL_53;
_L6:
        throw ;
_L3:
        LifeBonus.lII;
        setDx();
        i++;
_L1:
        if(i < DefaultStage.access$4(S555)) goto _L5; else goto _L4
_L4:
        return;
        null;
          goto _L6
    }

    private synchronized void stopPaddle()
    {
        int i = BonusActor.lll;
          goto _L1
_L5:
        ((Paddle)topBounce(i, S555)).setDx(DefaultStage.AnimationThread.IIl1);
        i++;
_L1:
        int j = DefaultStage.access$4(S555);
        i;
        TripleBonus.lI1l;
        JVM INSTR ifge 47;
           goto _L2 _L3
_L2:
        JVM INSTR pop ;
        break MISSING_BLOCK_LABEL_55;
_L6:
        throw ;
_L3:
        j;
        JVM INSTR icmplt 52;
           goto _L4 _L5
_L4:
        return;
        null;
          goto _L6
    }

    private synchronized void paddleAction()
    {
        int i = BonusActor.lll;
          goto _L1
_L5:
        Vector vector = S555;
        i;
        DefaultStage.ClockThread.$5SSS.booleanValue();
        JVM INSTR ifge 27;
           goto _L2 _L3
_L2:
        JVM INSTR pop ;
        break MISSING_BLOCK_LABEL_55;
_L6:
        throw ;
_L3:
        vector;
        topBounce();
        (Paddle);
        action();
        i++;
_L1:
        if(i < DefaultStage.access$4(S555)) goto _L5; else goto _L4
_L4:
        return;
        null;
          goto _L6
    }

    private synchronized void createBalls()
    {
        ((Paddle)topBounce(BonusActor.lll, S555)).createBall();
    }

    public boolean firstPaddleTop()
    {
        return ((Paddle)topBounce(BonusActor.lll, S555)).getTop();
    }

    public void keyReleased(int i)
    {
        int j;
        if(i == ImageFixedActor.SS5S5)
        {
            j = Block.llI;
            break MISSING_BLOCK_LABEL_18;
        }
        j = BonusActor.lll;
        i;
        DoubleBallBonus.._fld5SS;
        JVM INSTR ifge 30;
           goto _L1 _L2
_L1:
        JVM INSTR pop ;
        break MISSING_BLOCK_LABEL_67;
_L5:
        throw ;
_L2:
        DoubleBallBonus.I1l1;
        JVM INSTR icmpne 61;
           goto _L3 _L4
_L3:
        break MISSING_BLOCK_LABEL_36;
_L4:
        break MISSING_BLOCK_LABEL_43;
        i = Block.llI;
        break MISSING_BLOCK_LABEL_47;
        i = BonusActor.lll;
        if((j | i) != 0)
            stopPaddle();
        return;
        null;
          goto _L5
    }

    public void keyPressed(int i)
    {
        long l = Ball.S$$;
        if(i != ImageFixedActor.SS5S5) goto _L2; else goto _L1
_L1:
        movePaddleLeft();
          goto _L3
_L2:
        if(i != DoubleBallBonus.I1l1) goto _L5; else goto _L4
_L4:
        movePaddleRight();
          goto _L3
_L5:
        if(i != DoubleBallBonus.._cls55.) goto _L7; else goto _L6
_L6:
        paddleAction();
          goto _L3
_L7:
        if(i != NullBonus.l1IIl) goto _L9; else goto _L8
_L8:
        I11l;
        ImageMovingActor.S$S5S5;
        JVM INSTR ifge 68;
           goto _L10 _L11
_L10:
        JVM INSTR pop ;
        break MISSING_BLOCK_LABEL_216;
_L12:
        throw ;
_L11:
        Border.collisionVector();
        JVM INSTR pop ;
        KillingFloor.hit(BonusActor.lll, I11l);
          goto _L3
_L9:
        i = (char)i;
        l = (long)Ball.tryAndSplit(i) << 52 & 0x10000000000000L ^ l & 0xffefffffffffffffL;
        if((int)((l & 0x10000000000000L) >> 52) != 0)
        {
            StringBuffer stringbuffer = I11l;
            l = (long)Border.collisionVector(i) & 65535L ^ l & 0xffffffffffff0000L;
            ImageMovingActor.draw((char)(int)(l & 65535L), stringbuffer);
            if((int)((((long)StraightLineMovementCalculator.move(I11l) << 19 & 0x7fffffff80000L ^ l & 0xfff800000007ffffL) & 0x7fffffff80000L) >> 19) > NullBonus.I111)
                KillingFloor.hit(LongBonus..SSS, I11l);
        }
_L3:
        return;
        null;
          goto _L12
    }

    private void processKeyboardInput(String s)
    {
        s = decodeLevel(s);
        if(s < 0) goto _L2; else goto _L1
_L1:
        S$5S = s;
        s = JVM INSTR new #400 <Class BreakoutGame$Restart>;
        s;
        ActorArray.S$$$5;
        JVM INSTR ifge 30;
           goto _L3 _L4
_L3:
        JVM INSTR pop ;
        break MISSING_BLOCK_LABEL_42;
_L5:
        throw ;
_L4:
        this;
        Restart();
        DefaultStage.access$0(s);
_L2:
        return;
        null;
          goto _L5
    }

    public Bonus getRandomBonus()
    {
        Bonus abonus[] = S5S5;
        this = (int)(FixedActor.die(0x812fdf23c7369b41L) * (double)S5S5.length);
        return abonus[this];
    }

    public void setBonus(Bonus bonus)
    {
        if(lIlI.equivalent(bonus)) goto _L2; else goto _L1
_L1:
        S5$5$.setBonus(ActorArray.iterator(bonus));
        lIlI;
        if((byte)0x4c541451 % Paddle.S5S == 0) goto _L4; else goto _L3
_L3:
        JVM INSTR pop ;
        break MISSING_BLOCK_LABEL_64;
_L5:
        throw ;
_L4:
        removeBonus();
        bonus.addBonus();
        lIlI = bonus;
_L2:
        return;
        null;
          goto _L5
    }

    public static Object topBounce(int i, Vector vector)
    {
        return vector.elementAt(i);
    }

    public static boolean blockDied(Image image, int i, int j, int k, int l, int i1, int j1, int k1, 
            int l1, ImageObserver imageobserver, Graphics g)
    {
        return g.drawImage(image, i, j, k, l, i1, j1, k1, l1, imageobserver);
    }

    public static Object decodeLevel(Object obj, Object obj1, Hashtable hashtable)
    {
        return hashtable.put(obj, obj1);
    }

    public static int addBlock(int i)
    {
        return Math.abs(i);
    }

    private static final int ll11 = 3;
    private static final float S$S$ = 1.084647E+09F;
    public static final int S$5$S = 1;
    public static final int S$$5S = 2;
    public static final int l1I11 = 4;
    private static Random lll1I = new Random();
    public Stage S$5$;
    private BreakoutApplet S5$5$;
    private Hashtable Il11I;
    private Vector S555;
    private Vector $S5$;
    private LevelConstructor I1IIl;
    private boolean S55$5S;
    private int S$5S;
    private int I1ll;
    public int $S55;
    private boolean IllI;
    private Bonus lIlI;
    private Bonus S5S5[];
    private StringBuffer I11l;
    public int SSS$;
    public static String I11Il = "Extra life";
    public static int S$55 = 2;
    public static boolean $$SS5 = true;
    public static Boolean l111I = new Boolean(false);







}
