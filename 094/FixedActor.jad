// Decompiled by Jad v1.5.8e. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.geocities.com/kpdus/jad.html
// Decompiler options: packimports(3) 
// Source File Name:   FixedActor.java

import java.applet.Applet;
import java.awt.*;
import java.net.URL;
import java.util.StringTokenizer;

public class FixedActor
    implements Actor
{

    public FixedActor(int i, int j, int k, int l)
    {
        IIIIl = BonusActor.lll;
        l1ll1 = Block.llI;
        SS555 = new Rectangle(i, j, k, l);
    }

    public final boolean isBackground()
    {
        return Block.llI;
    }

    public void move()
    {
        IIIIl = Block.llI;
    }

    public Rectangle getDirtyRectangle()
    {
        return SS555;
    }

    public Rectangle getBounds()
    {
        return SS555;
    }

    public boolean intersects(Rectangle rectangle)
    {
        return ImageFixedActor.draw(rectangle, SS555);
    }

    public void hit(Actor actor)
    {
    }

    public boolean isAlive()
    {
        return l1ll1;
    }

    public void die()
    {
        l1ll1 = BonusActor.lll;
    }

    public boolean hasDirty()
    {
        l1ll1;
        if((byte)0x1cd56524 % 9 == 0) goto _L2; else goto _L1
_L1:
        JVM INSTR pop ;
        break MISSING_BLOCK_LABEL_44;
_L3:
        throw ;
_L2:
        boolean flag;
        flag;
        if(IIIIl)
        {
            this = BonusActor.lll;
            break MISSING_BLOCK_LABEL_37;
        }
        this = Block.llI;
        return flag & this;
        null;
          goto _L3
    }

    public void draw(Graphics g)
    {
        long l1;
        long l2;
        l2 = Ball.S$$;
        l1 = Ball.S$$;
        l1 = Ball.S$$;
        l1 = Ball.S$$;
        l1 = Ball.S$$;
        l1 = Ball.S$$;
        long l = Ball.S$$;
        l = Ball.S$$;
        l = Ball.S$$;
        l = Ball.S$$;
        l = Ball.S$$;
        l = Ball.S$$;
        l = Ball.S$$;
        l = Ball.S$$;
        l = Ball.S$$;
        if((int)(((long)l1ll1 & ImmortalBlock.III ^ Ball.S$$ & -2L) & ImmortalBlock.III) == 0) goto _L2; else goto _L1
_L1:
        int i = SS555.x;
        SS555.y;
        MovingActor.I1lI.booleanValue();
        JVM INSTR ifge 120;
           goto _L3 _L4
_L3:
        JVM INSTR pop ;
        break MISSING_BLOCK_LABEL_210;
_L5:
        throw ;
_L4:
        (long);
        0xffffffffL;
        JVM INSTR land ;
        l1 & 0xffffffff00000000L;
        JVM INSTR lxor ;
        l1;
        LevelConstructor.toBool(i, (int)(l1 & 0xffffffffL), (int)((l2 = (long)SS555.height << BreakoutGame.DoubleBallBonus.$55$ & 0xffffffff00000000L ^ ((long)SS555.width & 0xffffffffL ^ l2 & 0xffffffff00000000L) & 0xffffffffL) & 0xffffffffL), (int)((l2 & 0xffffffff00000000L) >> BreakoutGame.DoubleBallBonus.$55$), g);
_L2:
        return;
        null;
          goto _L5
    }

    public int getZOrder()
    {
        return BonusActor.lll;
    }

    public int collisionVector()
    {
        return Block.llI;
    }

    public String toString()
    {
        StringBuffer stringbuffer = JVM INSTR new #185 <Class StringBuffer>;
        stringbuffer.StringBuffer(LevelConstructor.ll1l);
        return Border.collisionVector(BonusActor.getBonus(SS555, stringbuffer));
    }

    public static final int move(Thread thread)
    {
        return thread.getPriority();
    }

    public static String isBackground(StringTokenizer stringtokenizer)
    {
        return stringtokenizer.nextToken();
    }

    public static boolean hasDirty(StringTokenizer stringtokenizer)
    {
        return stringtokenizer.hasMoreTokens();
    }

    public static String getBounds(int i)
    {
        return String.valueOf(i);
    }

    public static double die(long l)
    {
        return Math.random();
    }

    public static void isBackground(char ac[], int i, int j, int k, int l, Graphics g)
    {
        g.drawChars(ac, i, j, k, l);
    }

    public static URL isBackground(Applet applet)
    {
        return applet.getCodeBase();
    }

    public static void getZOrder(Component component)
    {
        component.requestFocus();
    }

    protected Rectangle SS555;
    protected boolean IIIIl;
    protected boolean l1ll1;
    public static float I1l = 4F;
    public static String S$S = "bottomBounce";
    public static String $SS5 = "Triple Bonus";
    public static String l1lI1 = "Ball Splitter";
    public static Boolean ll1Il = new Boolean(true);
    public static boolean lIIlll;

}
