// Decompiled by Jad v1.5.8e. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.geocities.com/kpdus/jad.html
// Decompiler options: packimports(3) 
// Source File Name:   LevelConstructor.java

import java.awt.*;
import java.util.StringTokenizer;
import java.util.Vector;

public class LevelConstructor
{

    public LevelConstructor()
    {
        String as[] = new String[13];
        as[BonusActor.lll] = " paddle false paddle.jpg longPaddle.jpg gunPaddle.jpg ball.jpg  bottomBounce false  topBounce true  block 0 0 red.jpg  block 1 0 red.jpg  block 2 0 red.jpg  block 3 0 red.jpg  block 4 0 red.jpg  block 5 0 red.jpg  block 6 0 red.jpg  block 7 0 red.jpg  block 8 0 red.jpg  block 9 0 red.jpg  block 10 0 red.jpg  block 11 0 red.jpg  block 12 0 red.jpg  block 0 1 orange.jpg  block 1 1 orange.jpg  block 2 1 orange.jpg  block 3 1 orange.jpg  block 4 1 orange.jpg  block 5 1 orange.jpg  block 6 1 orange.jpg  block 7 1 orange.jpg  block 8 1 orange.jpg  block 9 1 orange.jpg  block 10 1 orange.jpg  block 11 1 orange.jpg  block 12 1 orange.jpg  block 0 2 yellow.jpg  block 1 2 yellow.jpg  block 2 2 yellow.jpg  block 3 2 yellow.jpg  block 4 2 yellow.jpg  block 5 2 yellow.jpg  block 6 2 yellow.jpg  block 7 2 yellow.jpg  block 8 2 yellow.jpg  block 9 2 yellow.jpg  block 10 2 yellow.jpg  block 11 2 yellow.jpg  block 12 2 yellow.jpg  block 0 3 green.jpg  block 1 3 green.jpg  block 2 3 green.jpg  block 3 3 green.jpg  block 4 3 green.jpg  block 5 3 green.jpg  block 6 3 green.jpg  block 7 3 green.jpg  block 8 3 green.jpg  block 9 3 green.jpg  block 10 3 green.jpg  block 11 3 green.jpg  block 12 3 green.jpg  block 0 4 blue.jpg  block 1 4 blue.jpg  block 2 4 blue.jpg  block 3 4 blue.jpg  block 4 4 blue.jpg  block 5 4 blue.jpg  block 6 4 blue.jpg  block 7 4 blue.jpg  block 8 4 blue.jpg  block 9 4 blue.jpg  block 10 4 blue.jpg  block 11 4 blue.jpg  block 12 4 blue.jpg  block 0 5 violet.jpg  block 1 5 violet.jpg  block 2 5 violet.jpg  block 3 5 violet.jpg  block 4 5 violet.jpg  block 5 5 violet.jpg  block 6 5 violet.jpg  block 7 5 violet.jpg  block 8 5 violet.jpg  block 9 5 violet.jpg  block 10 5 violet.jpg  block 11 5 violet.jpg  block 12 5 violet.jpg  block 0 6 indigo.jpg  block 1 6 indigo.jpg  block 2 6 indigo.jpg  block 3 6 indigo.jpg  block 4 6 indigo.jpg  wall 66  block 5 6 indigo.jpg  block 6 6 indigo.jpg  block 7 6 indigo.jpg  block 8 6 indigo.jpg  block 9 6 indigo.jpg  block 10 6 indigo.jpg  block 11 6 indigo.jpg  block 12 6 indigo.jpg  block 0 7 grey.jpg  block 1 7 grey.jpg  block 2 7 grey.jpg  block 3 7 grey.jpg  block 4 7 grey.jpg  block 5 7 grey.jpg  block 6 7 grey.jpg  block 7 7 grey.jpg  block 8 7 grey.jpg  block 9 7 grey.jpg  block 10 7 grey.jpg  block 11 7 grey.jpg  block 12 7 grey.jpg  block 0 8 black.jpg  block 1 8 black.jpg  block 2 8 black.jpg  block 3 8 black.jpg  block 4 8 black.jpg  block 5 8 black.jpg  block 6 8 black.jpg  block 7 8 black.jpg  block 8 8 black.jpg  block 9 8 black.jpg  block 10 8 black.jpg  block 11 8 black.jpg  block 12 8 black.jpg    ";
        as[Block.llI] = "  paddle false paddle.jpg longPaddle.jpg gunPaddle.jpg ball.jpg  bottomBounce false  topBounce true  block 0 0 red.jpg  block 5 0 black.jpg  block 6 0 black.jpg  block 7 0 black.jpg  block 12 0 orange.jpg  block 0 1 yellow.jpg  block 1 1 red.jpg  block 6 1 black.jpg  block 11 1 orange.jpg  block 12 1 green.jpg  block 0 2 violet.jpg  block 1 2 yellow.jpg  block 2 2 red.jpg  block 10 2 orange.jpg  block 11 2 green.jpg  block 12 2 blue.jpg  block 0 3 darkGreen.jpg wall 101 block 1 3 violet.jpg  block 2 3 yellow.jpg  block 3 3 red.jpg  block 9 3 orange.jpg  block 10 3 green.jpg  block 11 3 blue.jpg  block 12 3 indigo.jpg  block 0 4 black.jpg  block 1 4 darkGreen.jpg  block 2 4 violet.jpg  block 3 4 yellow.jpg  block 4 4 red.jpg  block 8 4 orange.jpg  block 9 4 green.jpg  block 10 4 blue.jpg  block 11 4 indigo.jpg  block 12 4 black.jpg  block 0 5 black.jpg  block 1 5 black.jpg  block 2 5 darkGreen.jpg  block 3 5 violet.jpg  block 4 5 yellow.jpg  block 5 5 red.jpg  block 7 5 orange.jpg  block 8 5 green.jpg  block 9 5 blue.jpg  block 10 5 indigo.jpg  block 11 5 black.jpg  block 12 5 black.jpg  block 0 6 black.jpg  block 1 6 black.jpg  block 2 6 black.jpg  block 3 6 darkGreen.jpg  block 4 6 violet.jpg  block 5 6 yellow.jpg  block 6 6 black.jpg  block 7 6 green.jpg  block 8 6 blue.jpg  block 9 6 indigo.jpg  block 10 6 black.jpg  block 11 6 black.jpg  block 12 6 black.jpg  block 0 7 black.jpg  block 1 7 black.jpg  block 2 7 darkGreen.jpg  block 3 7 violet.jpg  block 4 7 yellow.jpg  block 5 7 orange.jpg  block 7 7 red.jpg  block 8 7 green.jpg  block 9 7 blue.jpg  block 10 7 indigo.jpg  block 11 7 black.jpg  block 12 7 black.jpg  block 0 8 black.jpg  block 1 8 darkGreen.jpg  block 2 8 violet.jpg  block 3 8 yellow.jpg  block 4 8 orange.jpg  block 8 8 red.jpg  block 9 8 green.jpg  block 10 8 blue.jpg  block 11 8 indigo.jpg  block 12 8 black.jpg  block 0 9 darkGreen.jpg  block 1 9 violet.jpg  block 2 9 yellow.jpg  block 3 9 orange.jpg  block 9 9 red.jpg  block 10 9 green.jpg  block 11 9 blue.jpg  block 12 9 indigo.jpg  block 0 10 violet.jpg  block 1 10 yellow.jpg  block 2 10 orange.jpg  block 10 10 red.jpg  block 11 10 green.jpg  block 12 10 blue.jpg  block 0 11 yellow.jpg  block 1 11 orange.jpg  block 11 11 red.jpg  block 12 11 green.jpg  block 0 12 orange.jpg  block 12 12 red.jpg   ";
        as[BreakoutGame.S$55] = "  paddle false paddle.jpg longPaddle.jpg gunPaddle.jpg ball.jpg  bottomBounce false  topBounce true  block 0 0 black.jpg  block 2 0 grey.jpg  block 4 0 blue.jpg  block 6 0 green.jpg  block 8 0 orange.jpg  block 10 0 yellow.jpg  block 12 0 red.jpg  block 0 1 black.jpg  block 2 1 grey.jpg  block 4 1 blue.jpg  block 6 1 green.jpg  block 8 1 orange.jpg  block 10 1 yellow.jpg  block 12 1 red.jpg  block 0 2 black.jpg  block 2 2 grey.jpg  block 4 2 blue.jpg  wall 100 block 6 2 green.jpg  block 8 2 orange.jpg  block 10 2 yellow.jpg  block 12 2 red.jpg  block 0 3 black.jpg  block 2 3 grey.jpg  block 4 3 blue.jpg  block 6 3 green.jpg  block 8 3 orange.jpg  block 10 3 yellow.jpg  block 12 3 red.jpg  block 0 4 black.jpg  block 2 4 grey.jpg  block 4 4 blue.jpg  block 6 4 green.jpg  block 8 4 orange.jpg  block 10 4 yellow.jpg  block 12 4 red.jpg  block 0 5 black.jpg  block 2 5 grey.jpg  block 4 5 blue.jpg  block 6 5 green.jpg  block 8 5 orange.jpg  block 10 5 yellow.jpg  block 12 5 red.jpg  block 0 6 black.jpg  block 2 6 grey.jpg  block 4 6 blue.jpg  block 6 6 green.jpg  block 8 6 orange.jpg  block 10 6 yellow.jpg  block 12 6 red.jpg  block 0 7 black.jpg  block 2 7 grey.jpg  block 4 7 blue.jpg  block 6 7 green.jpg  block 8 7 orange.jpg  block 10 7 yellow.jpg  block 12 7 red.jpg  immortalBlock 0 8 immortalBlock.jpg  immortalBlock 2 8 immortalBlock.jpg  immortalBlock 4 8 immortalBlock.jpg  immortalBlock 6 8 immortalBlock.jpg  immortalBlock 8 8 immortalBlock.jpg  immortalBlock 10 8 immortalBlock.jpg  immortalBlock 12 8 immortalBlock.jpg   ";
        as[Paddle.S5S] = "  paddle false paddle.jpg longPaddle.jpg gunPaddle.jpg ball.jpg  bottomBounce false  paddle true paddle.jpg longPaddle.jpg gunPaddle.jpg ball.jpg  topBounce false  block 0 5 orange.jpg  block 2 5 orange.jpg  block 4 5 orange.jpg  block 6 5 orange.jpg  block 8 5 orange.jpg  block 10 5 orange.jpg  block 12 5 orange.jpg  block 1 6 orange.jpg  block 3 6 orange.jpg  block 5 6 orange.jpg  block 7 6 orange.jpg  block 9 6 orange.jpg  block 11 6 orange.jpg  block 0 7 blue.jpg  block 1 7 blue.jpg  block 2 7 blue.jpg  block 3 7 blue.jpg wall 121 block 4 7 blue.jpg  block 5 7 blue.jpg  block 6 7 blue.jpg  block 7 7 blue.jpg  block 8 7 blue.jpg  block 9 7 blue.jpg  block 10 7 blue.jpg  block 11 7 blue.jpg  block 12 7 blue.jpg  block 0 8 yellow.jpg  block 1 8 yellow.jpg  block 2 8 yellow.jpg  block 3 8 yellow.jpg  block 4 8 yellow.jpg  block 5 8 yellow.jpg  block 6 8 yellow.jpg  block 7 8 yellow.jpg  block 8 8 yellow.jpg  block 9 8 yellow.jpg  block 10 8 yellow.jpg  block 11 8 yellow.jpg  block 12 8 yellow.jpg  block 0 9 black.jpg  block 1 9 black.jpg  block 2 9 black.jpg  block 3 9 black.jpg  block 4 9 black.jpg  block 5 9 black.jpg  block 6 9 black.jpg  block 7 9 black.jpg  block 8 9 black.jpg  block 9 9 black.jpg  block 10 9 black.jpg  block 11 9 black.jpg  block 12 9 black.jpg  block 0 10 red.jpg  block 1 10 red.jpg  block 2 10 red.jpg  block 3 10 red.jpg  block 4 10 red.jpg  block 5 10 red.jpg  block 6 10 red.jpg  block 7 10 red.jpg  block 8 10 red.jpg  block 9 10 red.jpg  block 10 10 red.jpg  block 11 10 red.jpg  block 12 10 red.jpg  block 1 11 green.jpg  block 3 11 green.jpg  block 5 11 green.jpg  block 7 11 green.jpg  block 9 11 green.jpg  block 11 11 green.jpg  block 0 12 green.jpg  block 2 12 green.jpg  block 4 12 green.jpg  block 6 12 green.jpg  block 8 12 green.jpg  block 10 12 green.jpg  block 12 12 green.jpg   ";
        as[BreakoutGame.TripleBonus.l1l1] = "  paddle false paddle.jpg longPaddle.jpg gunPaddle.jpg ball.jpg  bottomBounce false  topBounce true  block 0 1 green.jpg  block 1 1 green.jpg  block 2 1 green.jpg  block 6 1 blue.jpg  block 8 1 red.jpg  block 10 1 red.jpg  block 12 1 indigo.jpg  block 2 2 green.jpg  block 6 2 blue.jpg  block 8 2 red.jpg  block 10 2 red.jpg  block 12 2 indigo.jpg  block 0 3 green.jpg  block 1 3 green.jpg  block 2 3 green.jpg  block 6 3 blue.jpg  block 8 3 red.jpg  block 9 3 red.jpg  block 10 3 red.jpg  block 12 3 indigo.jpg  block 2 4 green.jpg wall 97 block 6 4 blue.jpg  block 10 4 red.jpg  block 12 4 indigo.jpg  block 0 5 green.jpg  block 1 5 green.jpg  block 2 5 green.jpg  immortalBlock 4 5 immortalBlock.jpg  block 6 5 blue.jpg  block 10 5 red.jpg  block 12 5 indigo.jpg  block 0 8 darkGreen.jpg  block 1 8 darkGreen.jpg  block 2 8 darkGreen.jpg  block 4 8 orange.jpg  block 5 8 orange.jpg  block 6 8 orange.jpg  block 8 8 violet.jpg  block 9 8 violet.jpg  block 10 8 violet.jpg  block 0 9 darkGreen.jpg  block 4 9 orange.jpg  block 6 9 orange.jpg  block 10 9 violet.jpg  block 0 10 darkGreen.jpg  block 1 10 darkGreen.jpg  block 2 10 darkGreen.jpg  block 4 10 orange.jpg  block 5 10 orange.jpg  block 6 10 orange.jpg  block 9 10 violet.jpg  block 2 11 darkGreen.jpg  block 6 11 orange.jpg  block 8 11 violet.jpg  block 0 12 darkGreen.jpg  block 1 12 darkGreen.jpg  block 2 12 darkGreen.jpg  block 6 12 orange.jpg  block 8 12 violet.jpg  block 9 12 violet.jpg  block 10 12 violet.jpg  block 0 14 grey.jpg  block 1 14 grey.jpg  block 2 14 grey.jpg  block 4 14 black.jpg  block 5 14 black.jpg  block 6 14 black.jpg  block 8 14 yellow.jpg  block 9 14 yellow.jpg  block 10 14 yellow.jpg  block 0 15 grey.jpg  block 4 15 black.jpg  block 10 15 yellow.jpg  block 0 16 grey.jpg  block 1 16 grey.jpg  block 2 16 grey.jpg  block 4 16 black.jpg  block 5 16 black.jpg  block 6 16 black.jpg  block 8 16 yellow.jpg  block 9 16 yellow.jpg  block 10 16 yellow.jpg  block 0 17 grey.jpg  block 2 17 grey.jpg  block 6 17 black.jpg  block 10 17 yellow.jpg  block 0 18 grey.jpg  block 1 18 grey.jpg  block 2 18 grey.jpg  block 4 18 black.jpg  block 5 18 black.jpg  block 6 18 black.jpg  block 8 18 yellow.jpg  block 9 18 yellow.jpg  block 10 18 yellow.jpg   ";
        as[BreakoutGame.DestroyerBonus.IlI] = "  paddle false paddle.jpg longPaddle.jpg gunPaddle.jpg ball.jpg  bottomBounce false  topBounce true  block 1 0 blue.jpg  block 5 0 blue.jpg  block 2 1 blue.jpg  block 6 1 yellow.jpg  block 9 1 blue.jpg  block 3 2 blue.jpg  block 5 2 yellow.jpg  block 6 2 yellow.jpg  block 7 2 yellow.jpg  block 11 2 blue.jpg  block 0 3 blue.jpg  block 4 3 yellow.jpg  block 5 3 yellow.jpg  block 6 3 yellow.jpg  block 7 3 yellow.jpg  block 8 3 yellow.jpg  block 3 4 yellow.jpg  block 4 4 yellow.jpg  block 5 4 yellow.jpg  block 6 4 yellow.jpg  block 7 4 yellow.jpg  block 8 4 yellow.jpg wall 112 block 9 4 yellow.jpg  block 12 4 blue.jpg  block 2 5 yellow.jpg  block 3 5 yellow.jpg  block 4 5 yellow.jpg  block 5 5 yellow.jpg  block 6 5 yellow.jpg  block 7 5 yellow.jpg  block 8 5 yellow.jpg  block 9 5 yellow.jpg  block 10 5 yellow.jpg  immortalBlock 6 6 immortalBlock.jpg  block 1 7 blue.jpg  immortalBlock 6 7 immortalBlock.jpg  block 12 7 blue.jpg  immortalBlock 6 8 immortalBlock.jpg  block 0 9 blue.jpg  immortalBlock 6 9 immortalBlock.jpg  immortalBlock 6 10 immortalBlock.jpg  block 11 10 blue.jpg  block 1 11 blue.jpg  immortalBlock 6 11 immortalBlock.jpg  immortalBlock 6 12 immortalBlock.jpg  block 0 13 blue.jpg  block 3 13 black.jpg  immortalBlock 6 13 immortalBlock.jpg  block 11 13 blue.jpg  block 4 14 black.jpg  immortalBlock 6 14 immortalBlock.jpg  block 5 15 black.jpg  immortalBlock 6 15 immortalBlock.jpg  block 12 15 blue.jpg  block 1 17 blue.jpg   ";
        as[StraightLineMovementCalculator.S5$] = "  paddle false paddle.jpg longPaddle.jpg gunPaddle.jpg ball.jpg  bottomBounce false  topBounce true  block 1 1 violet.jpg  block 2 1 violet.jpg  block 3 1 violet.jpg  block 4 1 violet.jpg  block 5 1 violet.jpg  block 6 1 violet.jpg  block 7 1 violet.jpg  block 8 1 violet.jpg  block 9 1 violet.jpg  block 10 1 violet.jpg  block 11 1 violet.jpg  block 1 2 violet.jpg  block 6 2 red.jpg  block 11 2 violet.jpg  block 1 3 violet.jpg  block 4 3 red.jpg  block 5 3 red.jpg  block 6 3 blue.jpg  block 7 3 red.jpg  block 8 3 red.jpg  block 11 3 violet.jpg  block 1 4 violet.jpg  block 3 4 red.jpg wall 101 block 5 4 blue.jpg  immortalBlock 6 4 immortalBlock.jpg  block 7 4 blue.jpg  block 9 4 red.jpg  block 11 4 violet.jpg  block 1 5 violet.jpg  block 2 5 red.jpg  block 4 5 blue.jpg  immortalBlock 6 5 immortalBlock.jpg  block 8 5 blue.jpg  block 10 5 red.jpg  block 11 5 violet.jpg  block 1 6 violet.jpg  block 2 6 red.jpg  block 3 6 blue.jpg  immortalBlock 5 6 immortalBlock.jpg  immortalBlock 7 6 immortalBlock.jpg  block 9 6 blue.jpg  block 10 6 red.jpg  block 11 6 violet.jpg  block 1 7 violet.jpg  block 2 7 red.jpg  block 3 7 blue.jpg  immortalBlock 5 7 immortalBlock.jpg  immortalBlock 7 7 immortalBlock.jpg  block 9 7 blue.jpg  block 10 7 red.jpg  block 11 7 violet.jpg  block 1 8 violet.jpg  block 2 8 red.jpg  block 3 8 blue.jpg  immortalBlock 5 8 immortalBlock.jpg  immortalBlock 7 8 immortalBlock.jpg  block 9 8 blue.jpg  block 10 8 red.jpg  block 11 8 violet.jpg  block 1 9 violet.jpg  block 2 9 red.jpg  block 4 9 blue.jpg  immortalBlock 6 9 immortalBlock.jpg  block 8 9 blue.jpg  block 10 9 red.jpg  block 11 9 violet.jpg  block 1 10 violet.jpg  block 2 10 red.jpg  block 5 10 blue.jpg  immortalBlock 6 10 immortalBlock.jpg  block 7 10 blue.jpg  block 10 10 red.jpg  block 11 10 violet.jpg  block 1 11 violet.jpg  block 3 11 red.jpg  block 6 11 blue.jpg  block 9 11 red.jpg  block 11 11 violet.jpg  block 1 12 violet.jpg  block 4 12 red.jpg  block 5 12 red.jpg  block 7 12 red.jpg  block 8 12 red.jpg  block 11 12 violet.jpg  block 1 13 violet.jpg  block 6 13 red.jpg  block 11 13 violet.jpg  block 1 14 violet.jpg  block 2 14 violet.jpg  block 3 14 violet.jpg  block 4 14 violet.jpg  block 5 14 violet.jpg  block 6 14 violet.jpg  block 7 14 violet.jpg  block 8 14 violet.jpg  block 9 14 violet.jpg  block 10 14 violet.jpg  block 11 14 violet.jpg    ";
        as[BreakoutGame.LifeBonus.S55$] = "  paddle false paddle.jpg longPaddle.jpg gunPaddle.jpg ball.jpg  bottomBounce false  topBounce true  block 6 0 yellow.jpg  block 7 0 yellow.jpg  block 8 0 yellow.jpg  block 5 1 yellow.jpg  block 6 1 yellow.jpg  block 7 1 yellow.jpg  block 8 1 yellow.jpg  block 9 1 yellow.jpg  block 4 2 yellow.jpg  block 5 2 yellow.jpg  block 6 2 yellow.jpg  block 7 2 yellow.jpg  block 8 2 yellow.jpg  block 9 2 yellow.jpg  block 10 2 yellow.jpg  block 4 3 yellow.jpg  block 5 3 yellow.jpg  block 6 3 yellow.jpg  block 7 3 yellow.jpg  block 8 3 yellow.jpg  block 9 3 yellow.jpg  block 10 3 yellow.jpg wall 97 block 5 4 black.jpg  block 6 4 black.jpg  block 7 4 black.jpg  block 8 4 black.jpg  block 9 4 black.jpg  block 1 5 grey.jpg  block 3 5 grey.jpg  block 5 5 black.jpg  block 6 5 orange.jpg  block 7 5 black.jpg  block 8 5 orange.jpg  block 9 5 black.jpg  block 1 6 grey.jpg  block 3 6 grey.jpg  block 5 6 black.jpg  block 6 6 black.jpg  block 7 6 black.jpg  block 8 6 black.jpg  block 9 6 black.jpg  block 1 7 violet.jpg  block 2 7 violet.jpg  block 3 7 violet.jpg  block 5 7 black.jpg  block 6 7 black.jpg  block 7 7 orange.jpg  block 8 7 black.jpg  block 9 7 black.jpg  block 2 8 violet.jpg  block 5 8 black.jpg  block 6 8 black.jpg  block 7 8 black.jpg  block 8 8 black.jpg  block 9 8 black.jpg  block 2 9 violet.jpg  block 7 9 black.jpg  block 2 10 black.jpg  block 3 10 black.jpg  block 4 10 black.jpg  block 5 10 black.jpg  block 6 10 black.jpg  block 7 10 black.jpg  block 8 10 black.jpg  block 9 10 black.jpg  block 10 10 black.jpg  block 11 10 black.jpg  block 2 11 violet.jpg  block 7 11 black.jpg  block 2 12 violet.jpg  block 7 12 black.jpg  block 2 13 violet.jpg  block 6 13 black.jpg  block 7 13 black.jpg  block 8 13 black.jpg  block 2 14 violet.jpg  block 5 14 black.jpg  block 6 14 black.jpg  block 8 14 black.jpg  block 9 14 black.jpg  block 2 15 violet.jpg  block 5 15 black.jpg  block 6 15 black.jpg  block 8 15 black.jpg  block 9 15 black.jpg  block 2 16 violet.jpg  block 5 16 black.jpg  block 6 16 black.jpg  block 8 16 black.jpg  block 9 16 black.jpg  block 5 17 black.jpg  block 9 17 black.jpg  block 4 18 darkGreen.jpg  block 5 18 darkGreen.jpg  block 6 18 darkGreen.jpg  block 7 18 darkGreen.jpg  block 8 18 darkGreen.jpg  block 9 18 darkGreen.jpg  block 10 18 darkGreen.jpg   ";
        as[BouncingMovementCalculator.I1l1l] = "   paddle false paddle.jpg longPaddle.jpg gunPaddle.jpg ball.jpg  bottomBounce false  topBounce true  immortalBlock 1 3 immortalBlock.jpg  immortalBlock 4 3 immortalBlock.jpg  immortalBlock 5 3 immortalBlock.jpg  immortalBlock 6 3 immortalBlock.jpg  immortalBlock 7 3 immortalBlock.jpg  immortalBlock 8 3 immortalBlock.jpg  immortalBlock 11 3 immortalBlock.jpg  immortalBlock 1 4 immortalBlock.jpg  immortalBlock 11 4 immortalBlock.jpg  immortalBlock 1 5 immortalBlock.jpg  immortalBlock 11 5 immortalBlock.jpg  immortalBlock 1 6 immortalBlock.jpg  immortalBlock 11 6 immortalBlock.jpg wall 116 immortalBlock 1 7 immortalBlock.jpg  block 2 7 indigo.jpg  block 3 7 indigo.jpg  block 4 7 indigo.jpg  block 5 7 indigo.jpg  block 6 7 indigo.jpg  block 7 7 indigo.jpg  block 8 7 indigo.jpg  block 9 7 indigo.jpg  block 10 7 indigo.jpg  immortalBlock 11 7 immortalBlock.jpg  immortalBlock 1 8 immortalBlock.jpg  block 2 8 violet.jpg  block 3 8 violet.jpg  block 4 8 violet.jpg  block 5 8 violet.jpg  block 6 8 violet.jpg  block 7 8 violet.jpg  block 8 8 violet.jpg  block 9 8 violet.jpg  block 10 8 violet.jpg  immortalBlock 11 8 immortalBlock.jpg  immortalBlock 1 9 immortalBlock.jpg  block 2 9 blue.jpg  block 3 9 blue.jpg  block 4 9 blue.jpg  block 5 9 blue.jpg  block 6 9 blue.jpg  block 7 9 blue.jpg  block 8 9 blue.jpg  block 9 9 blue.jpg  block 10 9 blue.jpg  immortalBlock 11 9 immortalBlock.jpg  immortalBlock 1 10 immortalBlock.jpg  block 2 10 green.jpg  block 3 10 green.jpg  block 4 10 green.jpg  block 5 10 green.jpg  block 6 10 green.jpg  block 7 10 green.jpg  block 8 10 green.jpg  block 9 10 green.jpg  block 10 10 green.jpg  immortalBlock 11 10 immortalBlock.jpg  immortalBlock 1 11 immortalBlock.jpg  block 2 11 yellow.jpg  block 3 11 yellow.jpg  block 4 11 yellow.jpg  block 5 11 yellow.jpg  block 6 11 yellow.jpg  block 7 11 yellow.jpg  block 8 11 yellow.jpg  block 9 11 yellow.jpg  block 10 11 yellow.jpg  immortalBlock 11 11 immortalBlock.jpg  immortalBlock 1 12 immortalBlock.jpg  block 2 12 orange.jpg  block 3 12 orange.jpg  block 4 12 orange.jpg  block 5 12 orange.jpg  block 6 12 orange.jpg  block 7 12 orange.jpg  block 8 12 orange.jpg  block 9 12 orange.jpg  block 10 12 orange.jpg  immortalBlock 11 12 immortalBlock.jpg  immortalBlock 1 13 immortalBlock.jpg  block 2 13 red.jpg  block 3 13 red.jpg  block 4 13 red.jpg  block 5 13 red.jpg  block 6 13 red.jpg  block 7 13 red.jpg  block 8 13 red.jpg  block 9 13 red.jpg  block 10 13 red.jpg  immortalBlock 11 13 immortalBlock.jpg  immortalBlock 1 14 immortalBlock.jpg  immortalBlock 2 14 immortalBlock.jpg  immortalBlock 3 14 immortalBlock.jpg  immortalBlock 4 14 immortalBlock.jpg  immortalBlock 5 14 immortalBlock.jpg  immortalBlock 6 14 immortalBlock.jpg  immortalBlock 7 14 immortalBlock.jpg  immortalBlock 8 14 immortalBlock.jpg  immortalBlock 9 14 immortalBlock.jpg  immortalBlock 10 14 immortalBlock.jpg  immortalBlock 11 14 immortalBlock.jpg   ";
        as[9] = "  bottomBounce true  paddle true paddle.jpg longPaddle.jpg gunPaddle.jpg ball.jpg  topBounce false  immortalBlock 3 8 immortalBlock.jpg  immortalBlock 4 8 immortalBlock.jpg  immortalBlock 5 8 immortalBlock.jpg  block 6 8 black.jpg  immortalBlock 7 8 immortalBlock.jpg  immortalBlock 8 8 immortalBlock.jpg  immortalBlock 9 8 immortalBlock.jpg  immortalBlock 3 9 immortalBlock.jpg  block 4 9 yellow.jpg  immortalBlock 5 9 immortalBlock.jpg  block 6 9 black.jpg  immortalBlock 7 9 immortalBlock.jpg  block 8 9 green.jpg  immortalBlock 9 9 immortalBlock.jpg  immortalBlock 3 10 immortalBlock.jpg wall 103 block 4 10 yellow.jpg  immortalBlock 5 10 immortalBlock.jpg  block 6 10 black.jpg  immortalBlock 7 10 immortalBlock.jpg  block 8 10 green.jpg  immortalBlock 9 10 immortalBlock.jpg  block 0 14 black.jpg  immortalBlock 1 14 immortalBlock.jpg  immortalBlock 2 14 immortalBlock.jpg  immortalBlock 3 14 immortalBlock.jpg  block 4 14 black.jpg  immortalBlock 5 14 immortalBlock.jpg  immortalBlock 6 14 immortalBlock.jpg  immortalBlock 7 14 immortalBlock.jpg  block 8 14 black.jpg  immortalBlock 9 14 immortalBlock.jpg  immortalBlock 10 14 immortalBlock.jpg  immortalBlock 11 14 immortalBlock.jpg  block 12 14 black.jpg  block 0 15 black.jpg  immortalBlock 1 15 immortalBlock.jpg  block 2 15 violet.jpg  immortalBlock 3 15 immortalBlock.jpg  block 4 15 black.jpg  immortalBlock 5 15 immortalBlock.jpg  block 6 15 darkGreen.jpg  immortalBlock 7 15 immortalBlock.jpg  block 8 15 black.jpg  immortalBlock 9 15 immortalBlock.jpg  block 10 15 red.jpg  immortalBlock 11 15 immortalBlock.jpg  block 12 15 black.jpg  block 0 16 black.jpg  immortalBlock 1 16 immortalBlock.jpg  block 2 16 violet.jpg  immortalBlock 3 16 immortalBlock.jpg  block 4 16 black.jpg  immortalBlock 5 16 immortalBlock.jpg  block 6 16 darkGreen.jpg  immortalBlock 7 16 immortalBlock.jpg  block 8 16 black.jpg  immortalBlock 9 16 immortalBlock.jpg  block 10 16 red.jpg  immortalBlock 11 16 immortalBlock.jpg  block 12 16 black.jpg   ";
        as[BreakoutGame.NullBonus.l1IIl] = " paddle false paddle.jpg longPaddle.jpg gunPaddle.jpg ball.jpg  bottomBounce false  topBounce true  block 0 0 blue.jpg  block 1 0 blue.jpg  block 2 0 blue.jpg  block 3 0 blue.jpg  block 4 0 blue.jpg  block 5 0 blue.jpg  block 6 0 blue.jpg  block 7 0 blue.jpg  block 8 0 yellow.jpg  block 9 0 blue.jpg  block 10 0 yellow.jpg  block 11 0 blue.jpg  block 12 0 yellow.jpg  block 0 1 blue.jpg  block 1 1 blue.jpg  block 2 1 blue.jpg  block 3 1 grey.jpg  block 4 1 grey.jpg  block 5 1 grey.jpg  block 6 1 grey.jpg  block 7 1 blue.jpg  block 8 1 blue.jpg  block 9 1 yellow.jpg  block 10 1 yellow.jpg wall 111 block 11 1 yellow.jpg  block 12 1 blue.jpg  block 0 2 blue.jpg  block 1 2 blue.jpg  block 2 2 grey.jpg  block 3 2 grey.jpg  block 4 2 grey.jpg  block 5 2 grey.jpg  block 6 2 grey.jpg  block 7 2 blue.jpg  block 8 2 yellow.jpg  block 9 2 yellow.jpg  block 10 2 yellow.jpg  block 11 2 yellow.jpg  block 12 2 yellow.jpg  block 0 3 blue.jpg  block 1 3 blue.jpg  block 2 3 grey.jpg  block 3 3 grey.jpg  block 4 3 grey.jpg  block 5 3 grey.jpg  block 6 3 blue.jpg  block 7 3 blue.jpg  block 8 3 blue.jpg  block 9 3 yellow.jpg  block 10 3 yellow.jpg  block 11 3 yellow.jpg  block 12 3 blue.jpg  block 0 4 blue.jpg  block 1 4 blue.jpg  block 2 4 grey.jpg  block 3 4 blue.jpg  block 4 4 blue.jpg  block 5 4 blue.jpg  block 6 4 blue.jpg  block 7 4 blue.jpg  block 8 4 yellow.jpg  block 9 4 blue.jpg  block 10 4 yellow.jpg  block 11 4 blue.jpg  block 12 4 yellow.jpg  block 0 5 blue.jpg  block 1 5 blue.jpg  block 2 5 blue.jpg  block 3 5 blue.jpg  block 4 5 blue.jpg  block 5 5 blue.jpg  block 6 5 blue.jpg  block 7 5 blue.jpg  block 8 5 blue.jpg  block 9 5 blue.jpg  block 10 5 blue.jpg  block 11 5 blue.jpg  block 12 5 blue.jpg  block 0 6 blue.jpg  block 1 6 blue.jpg  block 2 6 blue.jpg  block 3 6 blue.jpg  block 4 6 blue.jpg  block 5 6 blue.jpg  block 6 6 blue.jpg  block 7 6 blue.jpg  block 8 6 blue.jpg  block 9 6 blue.jpg  block 10 6 blue.jpg  block 11 6 blue.jpg  block 12 6 blue.jpg  block 0 7 blue.jpg  block 1 7 blue.jpg  block 2 7 blue.jpg  block 3 7 blue.jpg  block 4 7 blue.jpg  block 5 7 blue.jpg  block 6 7 blue.jpg  block 7 7 blue.jpg  block 8 7 blue.jpg  block 9 7 blue.jpg  block 10 7 blue.jpg  block 11 7 blue.jpg  block 12 7 blue.jpg  block 0 8 blue.jpg  block 1 8 blue.jpg  block 2 8 blue.jpg  block 3 8 blue.jpg  block 4 8 blue.jpg  block 5 8 blue.jpg  block 6 8 blue.jpg  block 7 8 blue.jpg  block 8 8 blue.jpg  block 9 8 blue.jpg  block 10 8 blue.jpg  block 11 8 blue.jpg  block 12 8 blue.jpg  block 0 9 blue.jpg  block 1 9 blue.jpg  block 2 9 blue.jpg  block 3 9 blue.jpg  block 4 9 blue.jpg  block 5 9 blue.jpg  block 6 9 blue.jpg  block 7 9 blue.jpg  block 8 9 blue.jpg  block 9 9 blue.jpg  block 10 9 blue.jpg  block 11 9 blue.jpg  block 12 9 blue.jpg  block 0 10 blue.jpg  block 1 10 blue.jpg  block 2 10 blue.jpg  block 3 10 blue.jpg  block 4 10 blue.jpg  block 5 10 blue.jpg  block 6 10 blue.jpg  block 7 10 blue.jpg  block 8 10 blue.jpg  block 9 10 blue.jpg  block 10 10 blue.jpg  block 11 10 blue.jpg  block 12 10 blue.jpg  block 0 11 blue.jpg  block 1 11 blue.jpg  block 2 11 blue.jpg  block 3 11 darkGreen.jpg  block 4 11 blue.jpg  block 5 11 blue.jpg  block 6 11 blue.jpg  block 7 11 blue.jpg  block 8 11 blue.jpg  block 9 11 blue.jpg  block 10 11 blue.jpg  block 11 11 blue.jpg  block 12 11 blue.jpg  block 0 12 blue.jpg  block 1 12 blue.jpg  block 2 12 darkGreen.jpg  block 3 12 darkGreen.jpg  block 4 12 darkGreen.jpg  block 5 12 blue.jpg  block 6 12 blue.jpg  block 7 12 blue.jpg  block 8 12 blue.jpg  block 9 12 blue.jpg  block 10 12 blue.jpg  block 11 12 blue.jpg  block 12 12 blue.jpg  block 0 13 blue.jpg  block 1 13 darkGreen.jpg  block 2 13 darkGreen.jpg  block 3 13 darkGreen.jpg  block 4 13 darkGreen.jpg  block 5 13 darkGreen.jpg  block 6 13 blue.jpg  block 7 13 blue.jpg  block 8 13 blue.jpg  block 9 13 darkGreen.jpg  block 10 13 darkGreen.jpg  block 11 13 blue.jpg  block 12 13 blue.jpg  block 0 14 darkGreen.jpg  block 1 14 darkGreen.jpg  block 2 14 darkGreen.jpg  block 3 14 darkGreen.jpg  block 4 14 darkGreen.jpg  block 5 14 darkGreen.jpg  block 6 14 darkGreen.jpg  block 7 14 blue.jpg  block 8 14 darkGreen.jpg  block 9 14 darkGreen.jpg  block 10 14 darkGreen.jpg  block 11 14 darkGreen.jpg  block 12 14 blue.jpg  block 0 15 darkGreen.jpg  block 1 15 darkGreen.jpg  block 2 15 darkGreen.jpg  block 3 15 darkGreen.jpg  block 4 15 darkGreen.jpg  block 5 15 darkGreen.jpg  block 6 15 darkGreen.jpg  block 7 15 darkGreen.jpg  block 8 15 darkGreen.jpg  block 9 15 darkGreen.jpg  block 10 15 darkGreen.jpg  block 11 15 darkGreen.jpg  block 12 15 darkGreen.jpg  block 0 16 darkGreen.jpg  block 1 16 darkGreen.jpg  block 2 16 darkGreen.jpg  block 3 16 darkGreen.jpg  block 4 16 darkGreen.jpg  block 5 16 darkGreen.jpg  block 6 16 darkGreen.jpg  block 7 16 darkGreen.jpg  block 8 16 darkGreen.jpg  block 9 16 darkGreen.jpg  block 10 16 darkGreen.jpg  block 11 16 darkGreen.jpg  block 12 16 darkGreen.jpg    ";
        as[11] = "  paddle false paddle.jpg longPaddle.jpg gunPaddle.jpg ball.jpg  bottomBounce false  topBounce true  block 0 0 grey.jpg  block 1 0 grey.jpg  block 2 0 grey.jpg  block 3 0 grey.jpg  block 4 0 grey.jpg  block 5 0 grey.jpg  block 6 0 grey.jpg  block 7 0 grey.jpg  block 8 0 grey.jpg  block 9 0 grey.jpg  block 10 0 grey.jpg  block 11 0 grey.jpg  immortalBlock 0 2 immortalBlock.jpg  immortalBlock 1 2 immortalBlock.jpg  immortalBlock 2 2 immortalBlock.jpg  immortalBlock 3 2 immortalBlock.jpg  immortalBlock 4 2 immortalBlock.jpg  immortalBlock 5 2 immortalBlock.jpg  immortalBlock 6 2 immortalBlock.jpg wall 98 immortalBlock 7 2 immortalBlock.jpg  immortalBlock 8 2 immortalBlock.jpg  immortalBlock 9 2 immortalBlock.jpg  immortalBlock 10 2 immortalBlock.jpg  immortalBlock 11 2 immortalBlock.jpg  block 0 3 yellow.jpg  block 1 3 yellow.jpg  block 2 3 yellow.jpg  block 3 3 yellow.jpg  block 4 3 yellow.jpg  block 5 3 yellow.jpg  block 6 3 yellow.jpg  block 7 3 yellow.jpg  block 8 3 yellow.jpg  block 9 3 yellow.jpg  block 10 3 yellow.jpg  block 11 3 yellow.jpg  immortalBlock 1 5 immortalBlock.jpg  immortalBlock 2 5 immortalBlock.jpg  immortalBlock 3 5 immortalBlock.jpg  immortalBlock 4 5 immortalBlock.jpg  immortalBlock 5 5 immortalBlock.jpg  immortalBlock 6 5 immortalBlock.jpg  immortalBlock 7 5 immortalBlock.jpg  immortalBlock 8 5 immortalBlock.jpg  immortalBlock 9 5 immortalBlock.jpg  immortalBlock 10 5 immortalBlock.jpg  immortalBlock 11 5 immortalBlock.jpg  immortalBlock 12 5 immortalBlock.jpg  block 1 6 green.jpg  block 2 6 green.jpg  block 3 6 green.jpg  block 4 6 green.jpg  block 5 6 green.jpg  block 6 6 green.jpg  block 7 6 green.jpg  block 8 6 green.jpg  block 9 6 green.jpg  block 10 6 green.jpg  block 11 6 green.jpg  block 12 6 green.jpg  immortalBlock 0 8 immortalBlock.jpg  immortalBlock 1 8 immortalBlock.jpg  immortalBlock 2 8 immortalBlock.jpg  immortalBlock 3 8 immortalBlock.jpg  immortalBlock 4 8 immortalBlock.jpg  immortalBlock 5 8 immortalBlock.jpg  immortalBlock 6 8 immortalBlock.jpg  immortalBlock 7 8 immortalBlock.jpg  immortalBlock 8 8 immortalBlock.jpg  immortalBlock 9 8 immortalBlock.jpg  immortalBlock 10 8 immortalBlock.jpg  immortalBlock 11 8 immortalBlock.jpg  block 0 9 blue.jpg  block 1 9 blue.jpg  block 2 9 blue.jpg  block 3 9 blue.jpg  block 4 9 blue.jpg  block 5 9 blue.jpg  block 6 9 blue.jpg  block 7 9 blue.jpg  block 8 9 blue.jpg  block 9 9 blue.jpg  block 10 9 blue.jpg  block 11 9 blue.jpg  immortalBlock 1 11 immortalBlock.jpg  immortalBlock 2 11 immortalBlock.jpg  immortalBlock 3 11 immortalBlock.jpg  immortalBlock 4 11 immortalBlock.jpg  immortalBlock 5 11 immortalBlock.jpg  immortalBlock 6 11 immortalBlock.jpg  immortalBlock 7 11 immortalBlock.jpg  immortalBlock 8 11 immortalBlock.jpg  immortalBlock 9 11 immortalBlock.jpg  immortalBlock 10 11 immortalBlock.jpg  immortalBlock 11 11 immortalBlock.jpg  immortalBlock 12 11 immortalBlock.jpg  block 1 12 red.jpg  block 2 12 red.jpg  block 3 12 red.jpg  block 4 12 red.jpg  block 5 12 red.jpg  block 6 12 red.jpg  block 7 12 red.jpg  block 8 12 red.jpg  block 9 12 red.jpg  block 10 12 red.jpg  block 11 12 red.jpg  block 12 12 red.jpg  immortalBlock 0 14 immortalBlock.jpg  immortalBlock 1 14 immortalBlock.jpg  immortalBlock 2 14 immortalBlock.jpg  immortalBlock 3 14 immortalBlock.jpg  immortalBlock 4 14 immortalBlock.jpg  immortalBlock 5 14 immortalBlock.jpg  immortalBlock 6 14 immortalBlock.jpg  immortalBlock 7 14 immortalBlock.jpg  immortalBlock 8 14 immortalBlock.jpg  immortalBlock 9 14 immortalBlock.jpg  immortalBlock 10 14 immortalBlock.jpg  immortalBlock 11 14 immortalBlock.jpg   ";
        as[BreakoutGame.NullBonus.$5S5S] = " paddle false paddle.jpg longPaddle.jpg gunPaddle.jpg ball.jpg  bottomBounce false  topBounce true  immortalBlock 0 0 immortalBlock.jpg  immortalBlock 1 0 immortalBlock.jpg  block 2 0 indigo.jpg  block 3 0 indigo.jpg  block 5 0 green.jpg  block 6 0 red.jpg  block 7 0 green.jpg  block 9 0 indigo.jpg  block 10 0 indigo.jpg  immortalBlock 11 0 immortalBlock.jpg  immortalBlock 12 0 immortalBlock.jpg  immortalBlock 0 1 immortalBlock.jpg  immortalBlock 1 1 immortalBlock.jpg  block 2 1 indigo.jpg  block 3 1 indigo.jpg  block 5 1 green.jpg  block 6 1 red.jpg  block 7 1 green.jpg  block 9 1 indigo.jpg  block 10 1 indigo.jpg  immortalBlock 11 1 immortalBlock.jpg  immortalBlock 12 1 immortalBlock.jpg  block 0 2 indigo.jpg  block 1 2 indigo.jpg  immortalBlock 2 2 immortalBlock.jpg  block 3 2 indigo.jpg  block 5 2 green.jpg  block 6 2 red.jpg  block 7 2 green.jpg  block 9 2 indigo.jpg  immortalBlock 10 2 immortalBlock.jpg  block 11 2 indigo.jpg  block 12 2 indigo.jpg  block 0 3 indigo.jpg  block 1 3 indigo.jpg  block 2 3 indigo.jpg  block 3 3 indigo.jpg wall 39   block 9 3 indigo.jpg  block 10 3 indigo.jpg  block 11 3 indigo.jpg  block 12 3 indigo.jpg  immortalBlock 5 5 immortalBlock.jpg  block 6 5 darkGreen.jpg  immortalBlock 7 5 immortalBlock.jpg  block 5 6 darkGreen.jpg  immortalBlock 6 6 immortalBlock.jpg  block 7 6 darkGreen.jpg  immortalBlock 5 7 immortalBlock.jpg  block 6 7 darkGreen.jpg  immortalBlock 7 7 immortalBlock.jpg  block 0 10 orange.jpg  block 1 10 orange.jpg  block 5 10 violet.jpg  block 6 10 yellow.jpg  block 7 10 violet.jpg  block 11 10 orange.jpg  block 12 10 orange.jpg  block 0 11 orange.jpg  block 1 11 orange.jpg  block 5 11 violet.jpg  block 6 11 yellow.jpg  block 7 11 violet.jpg  block 11 11 orange.jpg  block 12 11 orange.jpg  immortalBlock 0 12 immortalBlock.jpg  immortalBlock 1 12 immortalBlock.jpg  block 5 12 violet.jpg  block 6 12 yellow.jpg  block 7 12 violet.jpg  immortalBlock 11 12 immortalBlock.jpg  immortalBlock 12 12 immortalBlock.jpg  block 0 18 red.jpg  block 1 18 red.jpg  block 2 18 red.jpg  block 3 18 red.jpg  block 4 18 red.jpg  block 5 18 red.jpg  block 6 18 red.jpg  block 7 18 red.jpg  block 8 18 red.jpg  block 9 18 red.jpg  block 10 18 red.jpg  block 11 18 red.jpg  block 12 18 red.jpg ";
        $$S$ = as;
        $55$S = new int[BreakoutGame.DoubleBallBonus.$55$];
        $5S$ = null;
    }

    public void loadLevel(int i, BreakoutGame breakoutgame)
    {
        long l;
        long l1;
        long l2;
        long l4;
        long l5;
        long l6;
        long l7;
        long l8;
        long l9;
        long l10;
        long l11;
        long l12;
        long l13;
        long l14;
        long l15;
        long l16;
        l16 = Ball.S$$;
        l16 = Ball.S$$;
        l16 = Ball.S$$;
        l15 = Ball.S$$;
        l14 = Ball.S$$;
        l14 = Ball.S$$;
        l14 = Ball.S$$;
        l13 = Ball.S$$;
        l13 = Ball.S$$;
        l13 = Ball.S$$;
        l13 = Ball.S$$;
        l12 = Ball.S$$;
        l12 = Ball.S$$;
        l11 = Ball.S$$;
        l11 = Ball.S$$;
        l11 = Ball.S$$;
        l11 = Ball.S$$;
        l11 = Ball.S$$;
        l11 = Ball.S$$;
        l10 = Ball.S$$;
        l10 = Ball.S$$;
        l10 = Ball.S$$;
        l10 = Ball.S$$;
        l10 = Ball.S$$;
        l10 = Ball.S$$;
        l10 = Ball.S$$;
        l10 = Ball.S$$;
        l9 = Ball.S$$;
        l9 = Ball.S$$;
        l9 = Ball.S$$;
        l8 = Ball.S$$;
        l8 = Ball.S$$;
        l8 = Ball.S$$;
        l8 = Ball.S$$;
        l7 = Ball.S$$;
        l7 = Ball.S$$;
        l7 = Ball.S$$;
        l6 = Ball.S$$;
        l6 = Ball.S$$;
        l5 = Ball.S$$;
        l4 = Ball.S$$;
        l4 = Ball.S$$;
        l4 = Ball.S$$;
        long l3 = Ball.S$$;
        l3 = Ball.S$$;
        l2 = Ball.S$$;
        l1 = Ball.S$$;
        l1 = Ball.S$$;
        l1 = Ball.S$$;
        l = Ball.S$$;
        l = (long)$$S$.length & 0xffffffffL ^ Ball.S$$ & 0xffffffff00000000L;
        if(i >= (int)(l & 0xffffffffL))
            i %= (int)(((long)$$S$.length & 0xffffffffL ^ l3 & 0xffffffff00000000L) & 0xffffffffL);
        parseLevel($$S$[i], breakoutgame);
        if((int)(((long)$55$S[i] & 0xffffffffL ^ l5 & 0xffffffff00000000L) & 0xffffffffL) != 0) goto _L2; else goto _L1
_L1:
        l8 = (long)((int)(((long)(i << 261) & 0xffffffffL ^ l13 & 0xffffffff00000000L) & 0xffffffffL) + (int)(((long)(i * BreakoutGame.DestroyerBonus.IlI) & 0xffffffffL ^ l9 & 0xffffffff00000000L) & 0xffffffffL) + (int)(((long)((int)((l10 = (long)((int)((l2 = (long)$$S$.length & 0xffffffffL ^ l2 & 0xffffffff00000000L) & 0xffffffffL) << 130) & 0xffffffffL ^ l10 & 0xffffffff00000000L) & 0xffffffffL) + (int)(l2 & 0xffffffffL)) & 0xffffffffL ^ l6 & 0xffffffff00000000L) & 0xffffffffL)) & 0xffffffffL ^ l8 & 0xffffffff00000000L;
        $55$S[i] = (int)(l8 & 0xffffffffL);
        this = ((DefaultStage)breakoutgame.S$5$).IIIl;
        for(l15 = (long)BonusActor.lll & 0xffffffffL ^ l15 & 0xffffffff00000000L; (int)(l15 & 0xffffffffL) < (int)(((l10 = (long)this.length << BreakoutGame.DoubleBallBonus.$55$ & 0xffffffff00000000L ^ l10 & 0xffffffffL) & 0xffffffff00000000L) >> BreakoutGame.DoubleBallBonus.$55$); l15 = (long)(Block.llI + (int)(l15 & 0xffffffffL)) ^ l15 & 0xffffffff00000000L)
        {
            l4 = (long)this[(int)(l15 & 0xffffffffL)] & 65535L ^ l4 & 0xffffffffffff0000L;
            if((char)(int)(l4 & 65535L) != 0)
                continue;
            this[(int)(l15 & 0xffffffffL)] = (char)(int)(((long)(char)(int)(((long)(BreakoutGame.LifeBonus.$$$S + (int)((((long)((int)(((long)((int)(((long)((int)(((l7 = (long)((int)(((l12 = (long)breakoutgame.$S55 << BreakoutGame.DoubleBallBonus.$55$ & 0xffffffff00000000L ^ l12 & 0xffffffffL) & 0xffffffff00000000L) >> BreakoutGame.DoubleBallBonus.$55$) + i) << 18 & 0x3fffffffc0000L ^ l7 & 0xfffc00000003ffffL) & 0x3fffffffc0000L) >> 18) + (int)((((long)breakoutgame.SSS$ << BreakoutGame.DoubleBallBonus.$55$ & 0xffffffff00000000L ^ l8 & 0xffffffffL) & 0xffffffff00000000L) >> BreakoutGame.DoubleBallBonus.$55$)) & 0xffffffffL ^ l11 & 0xffffffff00000000L) & 0xffffffffL) + Paddle.S5S) & 0xffffffffL ^ l16 & 0xffffffff00000000L) & 0xffffffffL) % BouncingMovementCalculator.$5S) << BreakoutGame.DoubleBallBonus.$55$ & 0xffffffff00000000L ^ l & 0xffffffffL) & 0xffffffff00000000L) >> BreakoutGame.DoubleBallBonus.$55$)) & 0xffffffffL ^ l12 & 0xffffffff00000000L) & 0xffffffffL) & 65535L ^ l7 & 0xffffffffffff0000L) & 65535L);
            break;
        }

          goto _L3
_L2:
        if(i != 0 || (int)((((long)$55$S[Block.llI] << 19 & 0x7fffffff80000L ^ l4 & 0xfff800000007ffffL) & 0x7fffffff80000L) >> 19) == 0) goto _L3; else goto _L4
_L4:
        breakoutgame = ((DefaultStage)breakoutgame.S$5$).IIIl;
        l14 = (long)BonusActor.lll & 0xffffffffL ^ l14 & 0xffffffff00000000L;
          goto _L5
_L8:
        l1 = (long)breakoutgame[(int)(l14 & 0xffffffffL)] << 33 & 0x1fffe00000000L ^ l1 & 0xfffe0001ffffffffL;
        if((char)(int)((l1 & 0x1fffe00000000L) >> 33) != 0)
            continue; /* Loop/switch isn't completed */
        BreakoutGame.GunBonus.llII.booleanValue();
        JVM INSTR ifge 949;
           goto _L6 _L7
_L6:
        break MISSING_BLOCK_LABEL_947;
_L7:
        break MISSING_BLOCK_LABEL_949;
        null;
        throw ;
        breakoutgame[(int)(l14 & 0xffffffffL)] = StraightLineMovementCalculator.llIl;
        break; /* Loop/switch isn't completed */
_L5:
        if((int)(l14 & 0xffffffffL) < (int)((l1 = (long)breakoutgame.length & 0xffffffffL ^ l1 & 0xffffffff00000000L) & 0xffffffffL)) goto _L8; else goto _L3
_L3:
    }

    private void parseLevel(String s, BreakoutGame breakoutgame)
    {
        StringTokenizer stringtokenizer;
        long l;
        long l1;
        long l2;
        long l3;
        long l4;
        long l5;
        long l6;
        long l7;
        long l8;
        long l9;
        long l10;
        long l11;
        long l12;
        long l13;
        long l14;
        long l15;
        long l16;
        long l17;
        l17 = Ball.S$$;
        l16 = Ball.S$$;
        l16 = Ball.S$$;
        l15 = Ball.S$$;
        l14 = Ball.S$$;
        l14 = Ball.S$$;
        l14 = Ball.S$$;
        l14 = Ball.S$$;
        l14 = Ball.S$$;
        l14 = Ball.S$$;
        l13 = Ball.S$$;
        l13 = Ball.S$$;
        l13 = Ball.S$$;
        l12 = Ball.S$$;
        l12 = Ball.S$$;
        l12 = Ball.S$$;
        l12 = Ball.S$$;
        l12 = Ball.S$$;
        l12 = Ball.S$$;
        l11 = Ball.S$$;
        l11 = Ball.S$$;
        l11 = Ball.S$$;
        l11 = Ball.S$$;
        l11 = Ball.S$$;
        l11 = Ball.S$$;
        l11 = Ball.S$$;
        l11 = Ball.S$$;
        l11 = Ball.S$$;
        l10 = Ball.S$$;
        l9 = Ball.S$$;
        l8 = Ball.S$$;
        l8 = Ball.S$$;
        l8 = Ball.S$$;
        l8 = Ball.S$$;
        l8 = Ball.S$$;
        l7 = Ball.S$$;
        l7 = Ball.S$$;
        l6 = Ball.S$$;
        l6 = Ball.S$$;
        l6 = Ball.S$$;
        l5 = Ball.S$$;
        l5 = Ball.S$$;
        l4 = Ball.S$$;
        l4 = Ball.S$$;
        l3 = Ball.S$$;
        l3 = Ball.S$$;
        l2 = Ball.S$$;
        l2 = Ball.S$$;
        l2 = Ball.S$$;
        l2 = Ball.S$$;
        l2 = Ball.S$$;
        l1 = Ball.S$$;
        l1 = Ball.S$$;
        l1 = Ball.S$$;
        l1 = Ball.S$$;
        l = Ball.S$$;
        stringtokenizer = new StringTokenizer(s);
          goto _L1
_L5:
        String s1;
        String s2;
        s1 = FixedActor.isBackground(stringtokenizer);
        l1 = (long)Ball.addBall(BreakoutGame.LifeBonus.IlI1, s1) << 41 & 0x20000000000L ^ l1 & 0xfffffdffffffffffL;
        if((int)((l1 & 0x20000000000L) >> 41) == 0)
            break MISSING_BLOCK_LABEL_553;
        l2 = (long)toInt(FixedActor.isBackground(stringtokenizer)) & 0xffffffffL ^ l2 & 0xffffffff00000000L;
        l8 = (long)((int)(l2 & 0xffffffffL) << -347) & 0xffffffffL ^ l8 & 0xffffffff00000000L;
        l3 = (long)((int)(l2 & 0xffffffffL) * Paddle.S5S) & 0xffffffffL ^ l3 & 0xffffffff00000000L;
        l14 = (long)((int)(l8 & 0xffffffffL) + (int)(l3 & 0xffffffffL)) & 0xffffffffL ^ l14 & 0xffffffff00000000L;
        s2 = FixedActor.isBackground(stringtokenizer);
        lIII.booleanValue();
        JVM INSTR ifge 454;
           goto _L2 _L3
_L2:
        break MISSING_BLOCK_LABEL_452;
_L3:
        break MISSING_BLOCK_LABEL_454;
        null;
        throw ;
        l12 = (long)toInt(s2) & 0xffffffffL ^ l12 & 0xffffffff00000000L;
        l13 = (long)((int)(l12 & 0xffffffffL) << -412) & 0xffffffffL ^ l13 & 0xffffffff00000000L;
        l11 = (long)((int)(l13 & 0xffffffffL) + (int)(l12 & 0xffffffffL)) & 0xffffffffL ^ l11 & 0xffffffff00000000L;
        breakoutgame.addBlock((int)(l14 & 0xffffffffL), (int)(l11 & 0xffffffffL), FixedActor.isBackground(stringtokenizer));
        continue; /* Loop/switch isn't completed */
        l = (long)Ball.addBall(Block.$$SS$, s1) << Paddle.S5S & 8L ^ l & -9L;
        if((int)((l & 8L) >> Paddle.S5S) != 0)
        {
            l15 = (long)toInt(FixedActor.isBackground(stringtokenizer)) & 0xffffffffL ^ l15 & 0xffffffff00000000L;
            l16 = (long)((int)(l15 & 0xffffffffL) << -219) & 0xffffffffL ^ l16 & 0xffffffff00000000L;
            l1 = (long)((int)(l15 & 0xffffffffL) * Paddle.S5S) << StraightLineMovementCalculator.S5$ & 0x3fffffffc0L ^ l1 & 0xffffffc00000003fL;
            l = (long)((int)(l16 & 0xffffffffL) + (int)((l1 & 0x3fffffffc0L) >> StraightLineMovementCalculator.S5$)) << BreakoutGame.LifeBonus.S55$ & 0x7fffffff80L ^ l & 0xffffff800000007fL;
            l9 = (long)toInt(FixedActor.isBackground(stringtokenizer)) & 0xffffffffL ^ l9 & 0xffffffff00000000L;
            l17 = (long)((int)(l9 & 0xffffffffL) << 196) << BreakoutGame.DoubleBallBonus.$55$ & 0xffffffff00000000L ^ l17 & 0xffffffffL;
            l6 = (long)((int)((l17 & 0xffffffff00000000L) >> BreakoutGame.DoubleBallBonus.$55$) + (int)(l9 & 0xffffffffL)) & 0xffffffffL ^ l6 & 0xffffffff00000000L;
            String s3 = FixedActor.isBackground(stringtokenizer);
            breakoutgame.addImortalBlock((int)((l & 0x7fffffff80L) >> BreakoutGame.LifeBonus.S55$), (int)(l6 & 0xffffffffL), s3);
        } else
        {
            l = (long)Ball.addBall(FixedActor.S$S, s1) << 63 & 0x8000000000000000L ^ l & 0x7fffffffffffffffL;
            if((int)((l & 0x8000000000000000L) >> 63) != 0)
            {
                l1 = (long)toBool(FixedActor.isBackground(stringtokenizer)) << Paddle.S5S & 8L ^ l1 & -9L;
                breakoutgame.bottomBounce((int)((l1 & 8L) >> Paddle.S5S));
            } else
            {
                l1 = (long)Ball.addBall(ActorArray.ActorIterator.lIl, s1) << 43 & 0x80000000000L ^ l1 & 0xfffff7ffffffffffL;
                if((int)((l1 & 0x80000000000L) >> 43) != 0)
                {
                    l1 = (long)toBool(FixedActor.isBackground(stringtokenizer)) & ImmortalBlock.III ^ l1 & -2L;
                    breakoutgame.topBounce((int)(l1 & ImmortalBlock.III));
                } else
                {
                    l = (long)Ball.addBall(BreakoutGame.NullBonus.SS$, s1) << 58 & 0x400000000000000L ^ l & 0xfbffffffffffffffL;
                    if((int)((l & 0x400000000000000L) >> 58) != 0)
                    {
                        l10 = (long)toInt(FixedActor.isBackground(stringtokenizer)) & 0xffffffffL ^ l10 & 0xffffffff00000000L;
                        if($5S$ != s)
                        {
                            char ac[] = ((DefaultStage)breakoutgame.S$5$).IIIl;
                            for(l17 = (long)BonusActor.lll & 0xffffffffL ^ l17 & 0xffffffff00000000L; (int)(l17 & 0xffffffffL) < ac.length; l17 = (long)(Block.llI + (int)(l17 & 0xffffffffL)) ^ l17 & 0xffffffff00000000L)
                            {
                                l = (long)ac[(int)(l17 & 0xffffffffL)] << BreakoutGame.NullBonus.lIll & 0xffff0000000000L ^ l & 0xff0000ffffffffffL;
                                if((char)(int)((l & 0xffff0000000000L) >> BreakoutGame.NullBonus.lIll) != 0)
                                    continue;
                                breakoutgame.SSS$ = (int)(l10 & 0xffffffffL);
                                break;
                            }

                        }
                    } else
                    {
                        l = (long)Ball.addBall(ImmortalBlock.$$SS, s1) & ImmortalBlock.III ^ l & -2L;
                        if((int)(l & ImmortalBlock.III) != 0)
                        {
                            l = (long)toBool(FixedActor.isBackground(stringtokenizer)) << 59 & 0x800000000000000L ^ l & 0xf7ffffffffffffffL;
                            String s5 = FixedActor.isBackground(stringtokenizer);
                            String s6 = FixedActor.isBackground(stringtokenizer);
                            s1 = FixedActor.isBackground(stringtokenizer);
                            String s4 = FixedActor.isBackground(stringtokenizer);
                            l5 = (long)BreakoutGame.BallSplitterBonus.S5SS & 0xffffffffL ^ l5 & 0xffffffff00000000L;
                            if((int)((l & 0x800000000000000L) >> 59) != 0)
                                l7 = (long)BreakoutGame.DestroyerBonus.IlI & 0xffffffffL ^ l7 & 0xffffffff00000000L;
                            else
                                l7 = (long)StraightLineMovementCalculator._______ & 0xffffffffL ^ l7 & 0xffffffff00000000L;
                            l4 = (long)(int)(l7 & 0xffffffffL) & 0xffffffffL ^ l4 & 0xffffffff00000000L;
                            breakoutgame.addPaddle((int)(l5 & 0xffffffffL), (int)(l4 & 0xffffffffL), s5, s6, s1, s4, (int)((l & 0x800000000000000L) >> 59));
                        } else
                        {
                            java.io.PrintStream printstream = System.out;
                            ActorArray.ActorIterator.hasNext(Border.collisionVector(ActorArray.ActorIterator.next(s1, new StringBuffer(BouncingMovementCalculator.I11))), printstream);
                        }
                    }
                }
            }
        }
_L1:
        if((int)(((l1 = (long)FixedActor.hasDirty(stringtokenizer) << 45 & 0x200000000000L ^ l1 & 0xffffdfffffffffffL) & 0x200000000000L) >> 45) != 0) goto _L5; else goto _L4
_L4:
        $5S$ = s;
        return;
    }

    private int toInt(String s)
    {
_L3:
        if(i != 0) goto _L2; else goto _L1
_L1:
        JVM INSTR pop ;
        if(DefaultStage.Illll1.booleanValue() != BreakoutGame.SlowBallBonus.$$$$5)
            i = BreakoutGame.S$55;
        this = ImmortalBlock.collisionVector(ActorArray.ActorIterator.next(s));
        return this;
_L2:
        System.out;
        ActorArray.ActorIterator.reset();
        BreakoutApplet.init(null);
        return BonusActor.lll;
        int i = BonusActor.lll;
        i = BonusActor.lll;
        null;
          goto _L3
    }

    private boolean toBool(String s)
    {
_L3:
        if(i != 0) goto _L2; else goto _L1
_L1:
        JVM INSTR pop ;
        if(BreakoutGame.LifeBonus.Illl1 != DefaultStage.AnimationThread.$5$$55.booleanValue())
            i = Paddle.S5S;
        this = BouncingMovementCalculator.move(BreakoutApplet.keyUp(s));
        return this;
_L2:
        System.out;
        ActorArray.ActorIterator.reset();
        BreakoutApplet.init(null);
        return BonusActor.lll;
        int i = BonusActor.lll;
        i = BonusActor.lll;
        null;
          goto _L3
    }

    public static void parseLevel(Object obj, Vector vector)
    {
        vector.addElement(obj);
    }

    public static char toBool(int i, String s)
    {
        return s.charAt(i);
    }

    public static void loadLevel(int i, int j, Rectangle rectangle)
    {
        rectangle.translate(i, j);
    }

    public static void toBool(int i, int j, int k, int l, Graphics g)
    {
        g.fillRect(i, j, k, l);
    }

    public static void toBool(String s, Label label)
    {
        label.setText(s);
    }

    public static final int I111I = 35;
    public static final int l11I = 17;
    public static final int S5$5$5 = 20;
    public static final int lIIl = 13;
    public static final int S$S5 = 200;
    public static final int $5$5 = 5;
    public static final int l1l11 = 370;
    private static final String Ill1 = "block";
    private static final String SS5$ = "topBounce";
    private static final String lllI = "bottomBounce";
    private static final String SSS5 = "wall";
    private static final String Illl = "immortalBlock";
    private static final String $$S5 = "paddle";
    String $$S$[];
    private int $55$S[];
    private String $5S$;
    public static String $555 = "Sticky Paddle";
    public static String I1I11 = "Slow";
    public static String ll1l = "FixedActor ";
    public static int S$$S = 15;
    public static boolean lII1 = true;
    public static Boolean lIII = new Boolean(false);

}
