// Decompiled by Jad v1.5.8e. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.geocities.com/kpdus/jad.html
// Decompiler options: packimports(3) 
// Source File Name:   Paddle.java

import java.awt.*;
import java.awt.image.ImageObserver;
import java.util.Vector;

public class Paddle extends ImageMovingActor
{

    public Paddle(BreakoutGame breakoutgame, Stage stage, Image image, Image image1, Image image2, Image image3, ImageObserver imageobserver, 
            int i, int j, boolean flag)
    {
        super(stage, image, imageobserver, i, j);
        Il1I1 = BonusActor.lll;
        ll1l1 = BonusActor.lll;
        II1l1 = BonusActor.lll;
        $$S$$ = Ball.S$$;
        $5$SS = BonusActor.lll;
        I1lII1 = new Vector();
        lIl1lI = flag;
        S5$55 = image3;
        Il1l = breakoutgame;
        IlIll = image;
        I11IlI = image1;
        S$SSS5 = image2;
    }

    public void hit(Actor actor)
    {
        if(actor instanceof Ball)
        {
            actor = (Ball)actor;
            if(Il1I1)
                addBall(actor);
            else
            if($5$SS)
                actor.split();
            else
                bounceBall(actor);
            break MISSING_BLOCK_LABEL_103;
        }
        if(!(actor instanceof BonusActor))
            break MISSING_BLOCK_LABEL_90;
        Il1l.setBonus(((BonusActor)actor).getBonus());
        actor.die();
        if((byte)0x3307c6dc % 9 == 0)
            break MISSING_BLOCK_LABEL_103;
        null;
        throw ;
        if(actor instanceof Bullet)
            actor.die();
    }

    public void move()
    {
        $$S$$ = $$S$$ + ImmortalBlock.III;
        super.move();
        if(DefaultStage.access$4(I1lII1) == 0)
            break MISSING_BLOCK_LABEL_41;
        BreakoutGame.SlowBallBonus.S5555S.booleanValue();
        JVM INSTR ifge 37;
           goto _L1 _L2
_L1:
        break MISSING_BLOCK_LABEL_35;
_L2:
        break MISSING_BLOCK_LABEL_37;
        null;
        throw ;
        translateBalls();
    }

    public int collisionVector()
    {
        return S5S;
    }

    private void translateBalls()
    {
        long l;
        long l1;
        long l2;
        long l3;
        l3 = Ball.S$$;
        l2 = Ball.S$$;
        l2 = Ball.S$$;
        l2 = Ball.S$$;
        l2 = Ball.S$$;
        l2 = Ball.S$$;
        l2 = Ball.S$$;
        l2 = Ball.S$$;
        l1 = Ball.S$$;
        l1 = Ball.S$$;
        l1 = Ball.S$$;
        l1 = Ball.S$$;
        l1 = Ball.S$$;
        l1 = Ball.S$$;
        l1 = Ball.S$$;
        l = Ball.S$$;
        this;
        if((byte)0x285210ca % 9 == 0) goto _L2; else goto _L1
_L1:
        JVM INSTR pop ;
        break MISSING_BLOCK_LABEL_408;
_L3:
        throw ;
_L2:
        S$S$$$;
        x;
        (long);
        0xffffffffL;
        JVM INSTR land ;
        l1 & 0xffffffff00000000L;
        JVM INSTR lxor ;
        0xffffffffL;
        JVM INSTR land ;
        (int);
        (int)(((long)super.lI1I.x & 0xffffffffL ^ l2 & 0xffffffff00000000L) & 0xffffffffL);
        JVM INSTR isub ;
        (long);
        BouncingMovementCalculator.I1l1l;
        JVM INSTR lshl ;
        0xffffffff00L;
        JVM INSTR land ;
        l & 0xffffff00000000ffL;
        JVM INSTR lxor ;
        l;
        int i;
        i = super.S$S$$$.y - (int)(((long)super.lI1I.y & 0xffffffffL ^ l3 & 0xffffffff00000000L) & 0xffffffffL);
        if((int)((l & 0xffffffff00L) >> BouncingMovementCalculator.I1l1l) != 0)
        {
            l = (long)Block.llI << 43 & 0x80000000000L ^ l & 0xfffff7ffffffffffL;
            break MISSING_BLOCK_LABEL_244;
        }
        l = (long)BonusActor.lll << 43 & 0x80000000000L ^ l & 0xfffff7ffffffffffL;
        if(i != 0)
            l = (long)Block.llI << BreakoutGame.NullBonus.lIll & 0x10000000000L ^ l & 0xfffffeffffffffffL;
        else
            l = (long)BonusActor.lll << BreakoutGame.NullBonus.lIll & 0x10000000000L ^ l & 0xfffffeffffffffffL;
        l = (long)((int)((l & 0x80000000000L) >> 43) | (int)((l & 0x10000000000L) >> BreakoutGame.NullBonus.lIll)) & ImmortalBlock.III ^ l & -2L;
        if((int)(l & ImmortalBlock.III) != 0)
        {
            this = StraightLineMovementCalculator.determineCollision(I1lII1);
            while((int)(((l = (long)BouncingMovementCalculator.moveTemp(this) << BreakoutGame.TripleBonus.l1l1 & 16L ^ l & -17L) & 16L) >> BreakoutGame.TripleBonus.l1l1) != 0) 
                ((Ball)StraightLineMovementCalculator.move(this)).translate((int)((l & 0xffffffff00L) >> BouncingMovementCalculator.I1l1l), i);
        }
        return;
        null;
          goto _L3
    }

    public void addBall(Ball ball)
    {
        StraightLineMovementCalculator.determineCollision(ball.getBounds(), getBounds());
        StraightLineMovementCalculator.l111.booleanValue();
        JVM INSTR ifge 25;
           goto _L1 _L2
_L1:
        JVM INSTR pop ;
        break MISSING_BLOCK_LABEL_51;
_L5:
        throw ;
_L2:
        BreakoutGame.S$55;
        JVM INSTR iand ;
        JVM INSTR ifeq 48;
           goto _L3 _L4
_L3:
        break MISSING_BLOCK_LABEL_32;
_L4:
        break MISSING_BLOCK_LABEL_47;
        ball.setHeld(Block.llI);
        LevelConstructor.parseLevel(ball, I1lII1);
        return;
        null;
          goto _L5
    }

    private void bounceBall(Ball ball)
    {
        Rectangle rectangle;
        long l;
        long l1;
        long l4;
        long l5;
        long l6;
        l6 = Ball.S$$;
        l5 = Ball.S$$;
        l5 = Ball.S$$;
        l5 = Ball.S$$;
        l4 = Ball.S$$;
        l4 = Ball.S$$;
        l4 = Ball.S$$;
        long l3 = Ball.S$$;
        long l2 = Ball.S$$;
        l2 = Ball.S$$;
        l1 = Ball.S$$;
        l1 = Ball.S$$;
        l = Ball.S$$;
        rectangle = ball.getBounds();
        if((int)(((long)rectangle.x & 0xffffffffL ^ l3 & 0xffffffff00000000L) & 0xffffffffL) >= (int)(((long)(super.S$S$$$.x + (int)(((l4 = (long)super.S$S$$$.width << BreakoutGame.DoubleBallBonus.$55$ & 0xffffffff00000000L ^ l4 & 0xffffffffL) & 0xffffffff00000000L) >> BreakoutGame.DoubleBallBonus.$55$)) & 0xffffffffL ^ l2 & 0xffffffff00000000L) & 0xffffffffL))
            return;
        float f;
        l = (long)rectangle.width & 0xffffffffL ^ l & 0xffffffff00000000L;
        if((int)(((long)rectangle.x & 0xffffffffL ^ l5 & 0xffffffff00000000L) & 0xffffffffL) + (int)(l & 0xffffffffL) <= (int)(((long)super.S$S$$$.x & 0xffffffffL ^ l4 & 0xffffffff00000000L) & 0xffffffffL))
            return;
        f = StraightLineMovementCalculator.main(((ball.center() - center()) * KillingFloor.lIl1) / (float)(int)(((long)super.S$S$$$.width & 0xffffffffL ^ l6 & 0xffffffff00000000L) & 0xffffffffL));
        DefaultStage.ClockThread.$5SSS.booleanValue();
        JVM INSTR ifge 281;
           goto _L1 _L2
_L1:
        break MISSING_BLOCK_LABEL_279;
_L2:
        break MISSING_BLOCK_LABEL_281;
        null;
        throw ;
        l = (long)(ball.center() != center()) << 34 & 0x3fc00000000L ^ l & 0xfffffc03ffffffffL;
        if((byte)(int)((l & 0x3fc00000000L) >> 34) < 0)
            f = -f;
        if((byte)(int)(((long)(StraightLineMovementCalculator.main(f) != BreakoutApplet.$$S) & 255L ^ l1 & -256L) & 255L) < 0)
        {
            if((byte)(int)((((long)(f != DefaultStage.AnimationThread.IIl1) << 42 & 0x3fc0000000000L ^ l & 0xfffc03ffffffffffL) & 0x3fc0000000000L) >> 42) < 0)
                f = StraightLineMovementCalculator.$$$;
            else
                f = BreakoutApplet.$$S;
            f = f;
        }
        ball.setXMultiplier(f);
        return;
    }

    public void action()
    {
        releaseBalls();
        II1l1;
        BreakoutGame.Restart.llll1;
        JVM INSTR ifge 19;
           goto _L1 _L2
_L1:
        JVM INSTR pop ;
        break MISSING_BLOCK_LABEL_44;
_L5:
        throw ;
_L2:
        JVM INSTR ifeq 38;
           goto _L3 _L4
_L3:
        break MISSING_BLOCK_LABEL_22;
_L4:
        break MISSING_BLOCK_LABEL_37;
        if($$S$$ > DestroyerMovementCalculator.___)
            fireGun();
        return;
        null;
          goto _L5
    }

    private void fireGun()
    {
        long l;
        long l1;
        long l2;
        long l4;
        long l5 = Ball.S$$;
        l4 = Ball.S$$;
        long l3 = Ball.S$$;
        l2 = Ball.S$$;
        l2 = Ball.S$$;
        l1 = Ball.S$$;
        l1 = Ball.S$$;
        l1 = Ball.S$$;
        l1 = Ball.S$$;
        l1 = Ball.S$$;
        l = Ball.S$$;
        l = Ball.S$$;
        $$S$$ = Ball.S$$;
        l4 = (long)(super.S$S$$$.x + BreakoutGame.NullBonus.llI1l) & 0xffffffffL ^ l4 & 0xffffffff00000000L;
        l = (long)lIl1lI & ImmortalBlock.III ^ ((long)(super.S$S$$$.x + ImageFixedActor.$S$S) << BouncingMovementCalculator.I1l1l & 0xffffffff00L ^ l & 0xffffff00000000ffL) & -2L;
        if((int)(l & ImmortalBlock.III) != 0)
        {
            l2 = (long)((int)(((long)super.S$S$$$.y & 0xffffffffL ^ l3 & 0xffffffff00000000L) & 0xffffffffL) + (int)(((long)super.S$S$$$.height & 0xffffffffL ^ l5 & 0xffffffff00000000L) & 0xffffffffL)) & 0xffffffffL ^ l2 & 0xffffffff00000000L;
            break MISSING_BLOCK_LABEL_248;
        }
        l2 = (long)((int)(((long)super.S$S$$$.y & 0xffffffffL ^ l1 & 0xffffffff00000000L) & 0xffffffffL) - LevelConstructor.S$$S) & 0xffffffffL ^ l2 & 0xffffffff00000000L;
        Bullet bullet1 = JVM INSTR new #117 <Class Bullet>;
        bullet1;
        super.S$5$;
        l = (long)lIl1lI << BreakoutGame.TripleBonus.l1l1 & 16L ^ l & -17L;
        (int)(l4 & 0xffffffffL);
        (int)(l2 & 0xffffffffL);
        BreakoutGame.GunBonus.llII.booleanValue();
        JVM INSTR ifge 307;
           goto _L1 _L2
_L1:
        JVM INSTR pop ;
        JVM INSTR pop ;
        JVM INSTR pop ;
          goto _L3
_L4:
        throw ;
_L2:
        (int)((l & 16L) >> BreakoutGame.TripleBonus.l1l1);
        Bullet();
        Bullet bullet = new Bullet(super.S$5$, (int)(((l = (long)lIl1lI << 43 & 0x80000000000L ^ l & 0xfffff7ffffffffffL) & 0xffffffff00L) >> BouncingMovementCalculator.I1l1l), (int)(l2 & 0xffffffffL), (int)((l & 0x80000000000L) >> 43));
        super.S$5$.add(bullet1);
        super.S$5$.add(bullet);
        return;
_L3:
        JVM INSTR pop ;
        null;
          goto _L4
    }

    private void releaseBalls()
    {
        java.util.Enumeration enumeration;
        long l;
        long l1;
        l1 = Ball.S$$;
        l = Ball.S$$;
        enumeration = StraightLineMovementCalculator.determineCollision(I1lII1);
          goto _L1
_L5:
        Ball ball;
        ball = (Ball)StraightLineMovementCalculator.move(enumeration);
        l1 = (long)(StraightLineMovementCalculator.main(ball.center() - center()) != KillingFloor.lIl1) << 11 & 0x7f800L ^ l1 & 0xfffffffffff807ffL;
        BreakoutApplet.S$5$$S;
        JVM INSTR ifge 70;
           goto _L2 _L3
_L2:
        break MISSING_BLOCK_LABEL_68;
_L3:
        break MISSING_BLOCK_LABEL_70;
        null;
        throw ;
        float f;
        if((byte)(int)((l1 & 0x7f800L) >> 11) <= 0)
        {
            f = BreakoutGame.StickyBonus.Ill;
            break MISSING_BLOCK_LABEL_135;
        }
        f = ((ball.center() - center()) * KillingFloor.lIl1) / (float)(int)((l = (long)super.S$S$$$.width & 0xffffffffL ^ l & 0xffffffff00000000L) & 0xffffffffL);
        ball.setXMultiplier(f);
        if(ball.getBounds().y < (int)(((l = (long)super.S$S$$$.y << BreakoutGame.DoubleBallBonus.$55$ & 0xffffffff00000000L ^ l & 0xffffffffL) & 0xffffffff00000000L) >> BreakoutGame.DoubleBallBonus.$55$))
            l1 = (long)Block.SSSS & 255L ^ l1 & -256L;
        else
            l1 = (long)Block.llI & 255L ^ l1 & -256L;
        ball.setYMultiplier((byte)(int)(l1 & 255L));
        ball.setHeld(BonusActor.lll);
_L1:
        if((int)(((l1 = (long)BouncingMovementCalculator.moveTemp(enumeration) << 21 & 0x200000L ^ l1 & 0xffffffffffdfffffL) & 0x200000L) >> 21) != 0) goto _L5; else goto _L4
_L4:
        MovingActor.intersects(I1lII1);
        return;
    }

    public void createBall()
    {
        long l;
        long l1;
        long l2;
        long l3;
        long l4;
        long l5;
        long l6;
        long l7;
        long l8;
        l8 = Ball.S$$;
        l7 = Ball.S$$;
        l7 = Ball.S$$;
        l7 = Ball.S$$;
        l7 = Ball.S$$;
        l7 = Ball.S$$;
        l7 = Ball.S$$;
        l7 = Ball.S$$;
        l7 = Ball.S$$;
        l7 = Ball.S$$;
        l7 = Ball.S$$;
        l7 = Ball.S$$;
        l7 = Ball.S$$;
        l6 = Ball.S$$;
        l5 = Ball.S$$;
        l5 = Ball.S$$;
        l5 = Ball.S$$;
        l5 = Ball.S$$;
        l4 = Ball.S$$;
        l4 = Ball.S$$;
        l3 = Ball.S$$;
        l2 = Ball.S$$;
        l2 = Ball.S$$;
        l2 = Ball.S$$;
        l2 = Ball.S$$;
        l2 = Ball.S$$;
        l2 = Ball.S$$;
        l2 = Ball.S$$;
        l2 = Ball.S$$;
        l2 = Ball.S$$;
        l2 = Ball.S$$;
        l1 = Ball.S$$;
        l1 = Ball.S$$;
        l = Ball.S$$;
        l = Ball.S$$;
        l = Ball.S$$;
        if((int)(((long)lIl1lI & ImmortalBlock.III ^ l & -2L) & ImmortalBlock.III) != 0) goto _L2; else goto _L1
_L1:
        l2 = (long)super.S$S$$$.y & 0xffffffffL ^ l2 & 0xffffffff00000000L;
        l1 = (long)ActorArray.main(super.Illll, S5$55) & 0xffffffffL ^ l1 & 0xffffffff00000000L;
        (int)(l2 & 0xffffffffL);
        Bullet.S5S$S;
        JVM INSTR ifge 264;
           goto _L3 _L4
_L3:
        JVM INSTR pop ;
        break MISSING_BLOCK_LABEL_550;
_L6:
        throw ;
_L4:
        (int)(l1 & 0xffffffffL);
        JVM INSTR isub ;
        (long);
        0xffffffffL;
        JVM INSTR land ;
        l6 & 0xffffffff00000000L;
        JVM INSTR lxor ;
        l6;
          goto _L5
_L2:
        l6 = (long)((int)(((long)super.S$S$$$.y & 0xffffffffL ^ l3 & 0xffffffff00000000L) & 0xffffffffL) + super.S$S$$$.height) & 0xffffffffL ^ l6 & 0xffffffff00000000L;
_L5:
        Ball ball;
        addBall(ball = new Ball(Il1l, super.S$5$, S5$55, super.Illll, (int)((l4 = (long)((int)((((long)(super.S$S$$$.x + (int)(((long)((int)((l8 = (long)super.S$S$$$.width & 0xffffffffL ^ l8 & 0xffffffff00000000L) & 0xffffffffL) >> -447) & 0xffffffffL ^ l5 & 0xffffffff00000000L) & 0xffffffffL)) << BreakoutGame.DoubleBallBonus.$55$ & 0xffffffff00000000L ^ l2 & 0xffffffffL) & 0xffffffff00000000L) >> BreakoutGame.DoubleBallBonus.$55$) - (int)((l7 = (long)((int)((((long)Block.hit(super.Illll, S5$55) << BreakoutGame.DoubleBallBonus.$55$ & 0xffffffff00000000L ^ l8 & 0xffffffffL) & 0xffffffff00000000L) >> BreakoutGame.DoubleBallBonus.$55$) >> 161) & 0xffffffffL ^ l7 & 0xffffffff00000000L) & 0xffffffffL)) & 0xffffffffL ^ l4 & 0xffffffff00000000L) & 0xffffffffL), (int)(l6 & 0xffffffffL)));
        super.S$5$.add(ball);
        return;
        null;
          goto _L6
    }

    public boolean getTop()
    {
        return lIl1lI;
    }

    public void setSticky(boolean flag)
    {
        Il1I1 = flag;
    }

    public boolean isSticky()
    {
        return Il1I1;
    }

    public void setSplitBall(boolean flag)
    {
        $5$SS = flag;
    }

    public boolean getSplitBall()
    {
        return $5$SS;
    }

    public void setGun(boolean flag)
    {
        if(II1l1 == flag) goto _L2; else goto _L1
_L1:
        II1l1 = flag;
        if(!II1l1) goto _L4; else goto _L3
_L3:
        this;
        if((byte)0x4713bb00 % 9 == 0) goto _L6; else goto _L5
_L5:
        JVM INSTR pop ;
        break MISSING_BLOCK_LABEL_60;
_L8:
        throw ;
_L6:
        S$SSS5;
        flag;
          goto _L7
_L4:
        flag = IlIll;
_L7:
        setImage(flag);
_L2:
        return;
        null;
          goto _L8
    }

    public boolean hasGun()
    {
        return II1l1;
    }

    public void setBigPaddle(boolean flag)
    {
        boolean flag1 = ll1l1;
        DefaultStage.ClockThread.l1Ill1;
        JVM INSTR ifge 13;
           goto _L1 _L2
_L1:
        break MISSING_BLOCK_LABEL_11;
_L2:
        break MISSING_BLOCK_LABEL_13;
        null;
        throw ;
        if(flag1 != flag)
        {
            ll1l1 = flag;
            Image image;
            if(ll1l1)
                image = I11IlI;
            else
                image = IlIll;
            setImage(image);
        }
    }

    public boolean isBigPaddle()
    {
        return ll1l1;
    }

    public static Graphics isSticky(Image image)
    {
        return image.getGraphics();
    }

    public static boolean fireGun(Image image, int i, int j, ImageObserver imageobserver, Graphics g)
    {
        return g.drawImage(image, i, j, imageobserver);
    }

    public static void isSticky(Component component, Object obj, Container container)
    {
        container.add(component, obj);
    }

    private boolean lIl1lI;
    private Image S5$55;
    private boolean Il1I1;
    private boolean ll1l1;
    private boolean II1l1;
    private long $$S$$;
    private boolean $5$SS;
    private Vector I1lII1;
    private BreakoutGame Il1l;
    private Image IlIll;
    private Image I11IlI;
    private Image S$SSS5;
    public static int S5S = 3;
    public static Boolean S5$S5S = new Boolean(true);
    public static boolean I1lII;

}
